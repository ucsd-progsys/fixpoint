constraint: env [] 
	    grd (&& [])
	    lhs {v : int | [(v = 5)]}
	    rhs {v : int | [k1]}

constraint: env [] 
	    grd (&& [])
	    lhs {v : int | [k1]}
	    rhs {v : int | [(v < 100)]}

constraint: env [] 
	    grd (&& [])
	    lhs {v : int | [(v = 15)]}
	    rhs {v : int | [k2]}

constraint: env [] 
	    grd (&& [])
	    lhs {v : int | [k2]}
	    rhs {v : int | [(v > 5)]}

constraint: env [] 
	    grd (&& [])
	    lhs {v : int | [(v = 30)]}
	    rhs {v : int | [k3]}


constraint: env [] 
	    grd (&& [])
	    lhs {v : int | [k3]}
	    rhs {v : int | [(v > 18)]}

wf: env []
    reft {v : int | [k1]}

wf: env []
    reft {v : int | [k2]}

wf: env []
    reft {v : int | [k3]}


//qualif BOT(v:int) : (0 = 1)
//qualif FOO(v:int): (v [ < ; > ] 10)
qualif BAZ(v:int): (v [ < ; > ] [ 10 ; 20 ; 30 ; 40  ])
qualif ROOMAR(v:ptr)        : (BLOCK_END([v]) - v) >= [ 3000000 ; 2 ; 208 ; 16]
qualif GOO(v:int)        : v >= [ 3000000 ; 2 ; 208 ; 16]
