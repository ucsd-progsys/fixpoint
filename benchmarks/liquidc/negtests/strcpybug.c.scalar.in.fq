constraint:
 env  [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
       c_test:{VV_int : int | []};
       __cil_tmp7_test:{VV_int : int | []};
       __cil_tmp6_test:{VV_int : int | []};
       __cil_tmp5_test:{VV_int : int | []};
       __cil_tmp4_test:{VV_int : int | []};
       __cil_tmp3_test:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | []} 
 rhs {VV_int : int | [k_6]} 
 id 1 tag [1;1;-1;0] //test 
 
constraint:
 env  [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
       c_test:{VV_int : int | []};
       __cil_tmp7_test:{VV_int : int | []};
       __cil_tmp6_test:{VV_int : int | []};
       __cil_tmp5_test:{VV_int : int | []};
       __cil_tmp4_test:{VV_int : int | []};
       __cil_tmp3_test:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp7_test)]} 
 rhs {VV_int : int | [k_7]} 
 id 2 tag [1;1;-2;0] //test 
 
constraint:
 env  [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
       c_test:{VV_int : int | []};
       __cil_tmp7_test:{VV_int : int | []};
       __cil_tmp6_test:{VV_int : int | []};
       __cil_tmp5_test:{VV_int : int | []};
       __cil_tmp4_test:{VV_int : int | []};
       __cil_tmp3_test:{VV_int : int | [(VV_int = __cil_tmp7_test)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (__cil_tmp3_test : int))]} 
 rhs {VV_int : int | [k_8]} 
 id 3 tag [1;1;-3;0] //test 
 
constraint:
 env  [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
       c_test__SSA__blk_0_1:{VV_int : int | [(VV_int = (__cil_tmp3_test : int))]};
       c_test:{VV_int : int | []};
       __cil_tmp7_test:{VV_int : int | []};
       __cil_tmp6_test:{VV_int : int | []};
       __cil_tmp5_test:{VV_int : int | []};
       __cil_tmp4_test:{VV_int : int | []};
       __cil_tmp3_test:{VV_int : int | [(VV_int = __cil_tmp7_test)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (c_test__SSA__blk_0_1 : int))]} 
 rhs {VV_int : int | [k_9]} 
 id 4 tag [1;1;-4;0] //test 
 
constraint:
 env  [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
       c_test__SSA__blk_0_1:{VV_int : int | [(VV_int = (__cil_tmp3_test : int))]};
       c_test:{VV_int : int | []};
       __cil_tmp7_test:{VV_int : int | []};
       __cil_tmp6_test:{VV_int : int | []};
       __cil_tmp5_test:{VV_int : int | []};
       __cil_tmp4_test:{VV_int : int | [(VV_int = (c_test__SSA__blk_0_1 : int))]};
       __cil_tmp3_test:{VV_int : int | [(VV_int = __cil_tmp7_test)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = ((__cil_tmp4_test = 0) ? 1 : 0))]} 
 rhs {VV_int : int | [k_10]} 
 id 5 tag [1;1;-5;0] //test 
 
constraint:
 env  [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
       c_test__SSA__blk_0_1:{VV_int : int | [(VV_int = (__cil_tmp3_test : int))]};
       c_test:{VV_int : int | []};
       __cil_tmp7_test:{VV_int : int | []};
       __cil_tmp6_test:{VV_int : int | []};
       __cil_tmp5_test:{VV_int : int | [(VV_int = ((__cil_tmp4_test = 0) ? 1 : 0))]};
       __cil_tmp4_test:{VV_int : int | [(VV_int = (c_test__SSA__blk_0_1 : int))]};
       __cil_tmp3_test:{VV_int : int | [(VV_int = __cil_tmp7_test)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (__cil_tmp5_test : int))]} 
 rhs {VV_int : int | [k_11]} 
 id 6 tag [1;1;-6;0] //test 
 
constraint:
 env  [tmp_main:{VV_int : int | []};
       s1__lcc_heapify___main:{VV_int : int | []};
       off_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]} 
 rhs {VV_int : int | [k_0]} 
 id 7 tag [4;7;-1;1] //main 
 
constraint:
 env  [tmp_main:{VV_int : int | []};
       s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       s1__lcc_heapify___main:{VV_int : int | []};
       off_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int >= 1)]} 
 rhs {VV_int : int | [k_1]} 
 id 8 tag [4;6;-1;1] //main 
 
constraint:
 env  [tmp_main__SSA__blk_1_1:{VV_int : int | [(VV_int >= 1)]};
       tmp_main:{VV_int : int | []};
       s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       s1__lcc_heapify___main:{VV_int : int | []};
       off_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (tmp_main__SSA__blk_1_1 : int))]} 
 rhs {VV_int : int | [k_2]} 
 id 9 tag [4;6;-2;1] //main 
 
constraint:
 env  [tmp_main__SSA__blk_1_1:{VV_int : int | [(VV_int >= 1)]};
       tmp_main:{VV_int : int | []};
       s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       s1__lcc_heapify___main:{VV_int : int | []};
       off_main__SSA__blk_1_1:{VV_int : int | [(VV_int = (tmp_main__SSA__blk_1_1 : int))]};
       off_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = ((off_main__SSA__blk_1_1 < 10) ? 1 : 0))]} 
 rhs {VV_int : int | [k_3]} 
 id 10 tag [4;4;-1;1] //main 
 
constraint:
 env  [tmp_main__SSA__blk_1_1:{VV_int : int | [(VV_int >= 1)]};
       tmp_main:{VV_int : int | []};
       s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       s1__lcc_heapify___main:{VV_int : int | []};
       off_main__SSA__blk_1_1:{VV_int : int | [(VV_int = (tmp_main__SSA__blk_1_1 : int))]};
       off_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | [(VV_int = ((off_main__SSA__blk_1_1 < 10) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = s1__lcc_heapify___main__SSA__blk_0_1);(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([s1__lcc_heapify___main__SSA__blk_0_1]))]} 
 rhs {VV_int : int | [k_4]} 
 id 11 tag [4;1;-1;1] //main 
 
constraint:
 env  [tmp_main__SSA__blk_1_1:{VV_int : int | [(VV_int >= 1)]};
       tmp_main:{VV_int : int | []};
       s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       s1__lcc_heapify___main:{VV_int : int | []};
       off_main__SSA__blk_1_1:{VV_int : int | [(VV_int = (tmp_main__SSA__blk_1_1 : int))]};
       off_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | [(VV_int = ((off_main__SSA__blk_1_1 < 10) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (__cil_tmp5_main != 0) 
 lhs {VV_int : int | [&& [(VV_int = (s1__lcc_heapify___main__SSA__blk_0_1 + off_main__SSA__blk_1_1)) ; (s1__lcc_heapify___main__SSA__blk_0_1 <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([s1__lcc_heapify___main__SSA__blk_0_1]))]} 
 rhs {VV_int : int | [k_5]} 
 id 12 tag [4;2;-1;1] //main 
 
 
wf: env [tmp_main__SSA__blk_1_1:{VV_int : int | [(VV_int >= 1)]};
             tmp_main:{VV_int : int | []};
             s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             s1__lcc_heapify___main:{VV_int : int | []};
             off_main__SSA__blk_1_1:{VV_int : int | [(VV_int = (tmp_main__SSA__blk_1_1 : int))]};
             off_main:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_5]} 
      
    

    wf: env [tmp_main__SSA__blk_1_1:{VV_int : int | [(VV_int >= 1)]};
             tmp_main:{VV_int : int | []};
             s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             s1__lcc_heapify___main:{VV_int : int | []};
             off_main__SSA__blk_1_1:{VV_int : int | [(VV_int = (tmp_main__SSA__blk_1_1 : int))]};
             off_main:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_4]} 
      
    

    wf: env [tmp_main__SSA__blk_1_1:{VV_int : int | [(VV_int >= 1)]};
             tmp_main:{VV_int : int | []};
             s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             s1__lcc_heapify___main:{VV_int : int | []};
             off_main__SSA__blk_1_1:{VV_int : int | [(VV_int = (tmp_main__SSA__blk_1_1 : int))]};
             off_main:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_3]} 
      
    

    wf: env [tmp_main:{VV_int : int | []};
             s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             s1__lcc_heapify___main:{VV_int : int | []};
             off_main:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_2]} 
      
    

    wf: env [tmp_main:{VV_int : int | []};
             s1__lcc_heapify___main__SSA__blk_0_1:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             s1__lcc_heapify___main:{VV_int : int | []};
             off_main:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_1]} 
      
    

    wf: env [tmp_main:{VV_int : int | []};
             s1__lcc_heapify___main:{VV_int : int | []};
             off_main:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_0]} 
      
    

    wf: env [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
             c_test:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_11]} 
      
    

    wf: env [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
             c_test:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_10]} 
      
    

    wf: env [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
             c_test:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_9]} 
      
    

    wf: env [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
             c_test:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_8]} 
      
    

    wf: env [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
             c_test:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_7]} 
      
    

    wf: env [src_test:{VV_int : int | [(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));true]};
             c_test:{VV_int : int | []};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_6]} 
      
     
//solution: k_9 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_8 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_7 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_6 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_5 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_4 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_3 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_2 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_11 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_10 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_1 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

//solution: k_0 := [(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = 0);(0 = VV_int);(0 != VV_int)] 

solution: k_9 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_8 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_7 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_6 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_5 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_4 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_3 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_2 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_11 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_10 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_1 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

solution: k_0 := [((0 != VV_int), NEZ0);((0 = VV_int), EQZ);((VV_int = 0), SCALAR6);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR4);((VV_int >= 0), SCALAR3);((VV_int = 1), SCALAR2);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR1);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR);((0 = 1), NEZ)] 

//QUALIFIERS 

qualif SCALAR6(VV_int:int):(VV_int = 0)
      
qualif SCALAR5(VV_int:int):(VV_int >= (BLOCK_BEGIN([VV_int]) + 0))
      
qualif SCALAR4(VV_int:int):(VV_int = (BLOCK_BEGIN([VV_int]) + 0))
      
qualif SCALAR3(VV_int:int):(VV_int >= 0)
      
qualif SCALAR2(VV_int:int):(VV_int = 1)
      
qualif SCALAR1(VV_int:int):(VV_int >= 1)
      
qualif SCALAR0(VV_int:int):(VV_int >= (BLOCK_BEGIN([VV_int]) + 1))
      
qualif SCALAR(VV_int:int):(VV_int = (BLOCK_BEGIN([VV_int]) + 1))
      
qualif NEZ0(VV_int:int):(0 != VV_int) 
qualif NEZ(VV_int:int):(0 = 1)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GEZ(VV_int:int):(0 <= VV_int)
      
qualif EQZ(VV_int:int):(0 = VV_int) 
 
