del_dep: [1;1;-4;0] => * 
del_dep: [3;2;-2;1] => * 
del_dep: [3;1;-3;1] => * 

constraint:
 env  [x_t:{VV_ptr_A4 : ptr(A4) | [k_5[VV_ptr_C9:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       __cil_tmp2_t:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A4 : ptr(A4) | [(VV_ptr_A4 = x_t)]} 
 rhs {VV_ptr_A4 : ptr(A4) | [|| [(UNCHECKED([VV_ptr_A4]) = 1);&& [(VV_ptr_A4 != 0) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; ((VV_ptr_A4 + 3) < BLOCK_END([VV_ptr_A4]))]]]} 
 id 2 tag [1;1;-1;0] //t 
 
constraint:
 env  [x_t:{VV_ptr_A4 : ptr(A4) | []};
       lqn#1:{VV_int : int | []};
       __cil_tmp2_t:{VV_int : int | [(VV_int = (0 : int))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       FINAL0:{VV_int : int | [(VV_int = (DEREF([(BLOCK_BEGIN([x_t]) + 0)]) : int));(VV_int = 3)]};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp2_t)]} 
 rhs {VV_int : int | [(VV_int != 0)]} 
 id 3 tag [1;1;-3;0] //t 
 
constraint:
 env  [x__lcc_heapify___main:{VV_ptr_A11 : ptr(A11) | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 4)]} 
 rhs {VV_int : int | [(VV_int >= 0)]} 
 id 6 tag [3;2;-1;1] //main 
 
constraint:
 env  [x__lcc_heapify___main__SSA__blk_0_1:{VV_ptr_A13 : ptr(A13) | [&& [(VV_ptr_A13 > 0) ; (VV_ptr_A13 = BLOCK_BEGIN([VV_ptr_A13])) ; (BLOCK_END([VV_ptr_A13]) = (VV_ptr_A13 + 4))]]};
       x__lcc_heapify___main:{VV_ptr_A11 : ptr(A11) | []};
       lqn#0:{VV_int : int | [(VV_int = 0)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A13 : ptr(A13) | [(VV_ptr_A13 = x__lcc_heapify___main__SSA__blk_0_1)]} 
 rhs {VV_ptr_A13 : ptr(A13) | [|| [(UNCHECKED([VV_ptr_A13]) = 1);&& [(VV_ptr_A13 != 0) ; (BLOCK_BEGIN([VV_ptr_A13]) <= VV_ptr_A13) ; ((VV_ptr_A13 + 3) < BLOCK_END([VV_ptr_A13]))]]]} 
 id 7 tag [3;1;-1;1] //main 
 
constraint:
 env  [x__lcc_heapify___main__SSA__blk_0_1:{VV_ptr_A13 : ptr(A13) | [&& [(VV_ptr_A13 > 0) ; (VV_ptr_A13 = BLOCK_BEGIN([VV_ptr_A13])) ; (BLOCK_END([VV_ptr_A13]) = (VV_ptr_A13 + 4))]]};
       x__lcc_heapify___main:{VV_ptr_A11 : ptr(A11) | []};
       lqn#0:{VV_int : int | [(VV_int = 0)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A13 : ptr(A13) | [(VV_ptr_A13 = x__lcc_heapify___main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A13]) = BLOCK_BEGIN([x__lcc_heapify___main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A13]) = BLOCK_END([x__lcc_heapify___main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A13]) = UNCHECKED([x__lcc_heapify___main__SSA__blk_0_1]))]} 
 rhs {VV_ptr_A13 : ptr(A13) | [k_5[x_t:=x__lcc_heapify___main__SSA__blk_0_1][VV_ptr_A4:=VV_ptr_A13]]} 
 id 9 tag [3;1;-2;1] //main 
 
 
wf: env [x_t:{VV_ptr_A4 : ptr(A4) | [k_5]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_ptr_A4 : ptr(A4) | [k_5]} 
      
     
//solution: k_8 := [(0 <= VV_int);(1 = 0);(VV_int < A4#Ix#0);(0 < VV_int);(VV_int <= A4#Ix#0);(VV_int = 0);(VV_int > A4#Ix#0);(VV_int >= A4#Ix#0)] 

//solution: k_7 := [(0 <= VV_int);(1 = 0);(VV_int < A13#Ix#0);(0 < VV_int);(VV_int <= A13#Ix#0);(VV_int = 0);(VV_int > A13#Ix#0);(VV_int >= A13#Ix#0)] 

//solution: k_6 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0)] 

//solution: k_5 := [(BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4);(VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4]));(0 <= VV_ptr_A4);((VV_ptr_A4 != 0) => (VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4])));(0 < VV_ptr_A4);(VV_ptr_A4 < BLOCK_END([VV_ptr_A4]));((VV_ptr_A4 != 0) => ((BLOCK_END([VV_ptr_A4]) - VV_ptr_A4) >= 4));((VV_ptr_A4 != 0) => && [(0 < VV_ptr_A4) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; (VV_ptr_A4 < BLOCK_END([VV_ptr_A4]))]);(BLOCK_END([VV_ptr_A4]) = BLOCK_END([x_t]));(BLOCK_BEGIN([VV_ptr_A4]) = BLOCK_BEGIN([x_t]))] 

//solution: k_4 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0)] 

//solution: k_3 := [(0 <= VV_int);(1 = 0);(VV_int < A4#Ix#0);(0 < VV_int);(VV_int <= A4#Ix#0);(VV_int = 0);(VV_int > A4#Ix#0);(VV_int >= A4#Ix#0)] 

//solution: k_2 := [(0 <= VV_int);(1 = 0);(VV_int < A4#Ix#0);(0 < VV_int);(VV_int <= A4#Ix#0);(VV_int = 0);(VV_int > A4#Ix#0);(VV_int >= A4#Ix#0)] 

solution: k_8 := [((VV_int >= A4#Ix#0), GEQ[~A0:=A4#Ix#0]);((VV_int > A4#Ix#0), GT[~A0:=A4#Ix#0]);((VV_int = 0), EQZ);((VV_int <= A4#Ix#0), LEQ[~A0:=A4#Ix#0]);((0 < VV_int), GTZ);((VV_int < A4#Ix#0), LT[~A0:=A4#Ix#0]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_7 := [((VV_int >= A13#Ix#0), GEQ[~A0:=A13#Ix#0]);((VV_int > A13#Ix#0), GT[~A0:=A13#Ix#0]);((VV_int = 0), EQZ);((VV_int <= A13#Ix#0), LEQ[~A0:=A13#Ix#0]);((0 < VV_int), GTZ);((VV_int < A13#Ix#0), LT[~A0:=A13#Ix#0]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_6 := [((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_5 := [((BLOCK_BEGIN([VV_ptr_A4]) = BLOCK_BEGIN([x_t])), BEGIN[~A0:=x_t][VV_ptr_0:=VV_ptr_A4]);((BLOCK_END([VV_ptr_A4]) = BLOCK_END([x_t])), END[~A0:=x_t][VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => && [(0 < VV_ptr_A4) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; (VV_ptr_A4 < BLOCK_END([VV_ptr_A4]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => ((BLOCK_END([VV_ptr_A4]) - VV_ptr_A4) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A4]);((VV_ptr_A4 < BLOCK_END([VV_ptr_A4])), UB[VV_ptr_0:=VV_ptr_A4]);((0 < VV_ptr_A4), GTZP[VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => (VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A4]);((0 <= VV_ptr_A4), GTZP0[VV_ptr_0:=VV_ptr_A4]);((VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4])), ISBS[VV_ptr_0:=VV_ptr_A4]);((BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4), LB[VV_ptr_0:=VV_ptr_A4])] 

solution: k_4 := [((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_3 := [((VV_int >= A4#Ix#0), GEQ[~A0:=A4#Ix#0]);((VV_int > A4#Ix#0), GT[~A0:=A4#Ix#0]);((VV_int = 0), EQZ);((VV_int <= A4#Ix#0), LEQ[~A0:=A4#Ix#0]);((0 < VV_int), GTZ);((VV_int < A4#Ix#0), LT[~A0:=A4#Ix#0]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_2 := [((VV_int >= A4#Ix#0), GEQ[~A0:=A4#Ix#0]);((VV_int > A4#Ix#0), GT[~A0:=A4#Ix#0]);((VV_int = 0), EQZ);((VV_int <= A4#Ix#0), LEQ[~A0:=A4#Ix#0]);((0 < VV_int), GTZ);((VV_int < A4#Ix#0), LT[~A0:=A4#Ix#0]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

//QUALIFIERS 

qualif WORDSIZE(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => ((BLOCK_END([VV_ptr_0]) - VV_ptr_0) >= 4))
      
qualif UCH(VV_ptr_0:ptr(0)):(UNCHECKED([VV_ptr_0]) = 1)
      
qualif UB(VV_ptr_0:ptr(0)):(VV_ptr_0 < BLOCK_END([VV_ptr_0]))
      
qualif NULLorVALID(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => && [(0 < VV_ptr_0) ; (BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0) ; (VV_ptr_0 < BLOCK_END([VV_ptr_0]))])
      
qualif NULLorBEGIN(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => (VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0])))
      
qualif LT(VV_int:int):(VV_int < ~A0)
      
qualif LEQ(VV_int:int):(VV_int <= ~A0)
      
qualif LB(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0)
      
qualif ISBS(VV_ptr_0:ptr(0)):(VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0]))
      
qualif GTZP0(VV_ptr_0:ptr(0)):(0 <= VV_ptr_0)
      
qualif GTZP(VV_ptr_0:ptr(0)):(0 < VV_ptr_0)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GT(VV_int:int):(VV_int > ~A0)
      
qualif GEZ(VV_int:int):(0 <= VV_int)
      
qualif GEQ(VV_int:int):(VV_int >= ~A0)
      
qualif FALSE(VV_int:int):(1 = 0)
      
qualif EQZ0(VV_ptr_0:ptr(0)):(VV_ptr_0 = 0)
      
qualif EQZ(VV_int:int):(VV_int = 0)
      
qualif END(VV_ptr_0:ptr(0)):(BLOCK_END([VV_ptr_0]) = BLOCK_END([~A0]))
      
qualif BEGIN(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) = BLOCK_BEGIN([~A0]))
      
 
