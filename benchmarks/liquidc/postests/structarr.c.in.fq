del_dep: [2;10;-2;0] => * 
del_dep: [2;10;-6;0] => * 
del_dep: [2;10;-19;0] => * 

constraint:
 env  [tmp_main__SSA__blk_0_1:{VV_int : int | [(VV_int >= 1)]};
       tmp_main:{VV_int : int | []};
       tmp___1_main:{VV_ptr_A27 : ptr(A27) | []};
       tmp___0_main:{VV_ptr_A28 : ptr(A28) | []};
       size_main__SSA__blk_0_1:{VV_int : int | [(VV_int = (tmp_main__SSA__blk_0_1 : int))]};
       size_main:{VV_int : int | []};
       retval_main:{VV_ptr_A29 : ptr(A29) | []};
       mem_8_main:{VV_ptr_A8 : ptr(A8) | []};
       mem_7_main:{VV_ptr_A8 : ptr(A8) | []};
       i_main:{VV_int : int | []};
       __cil_tmp9_main:{VV_int : int | [&& [(VV_int = (8 : int)) ; (0 <= VV_int)]]};
       __cil_tmp21_main:{VV_ptr_A8 : ptr(A8) | []};
       __cil_tmp20_main:{VV_ptr_A8 : ptr(A8) | []};
       __cil_tmp19_main:{VV_ptr_A8 : ptr(A8) | []};
       __cil_tmp18_main:{VV_int : int | []};
       __cil_tmp17_main:{VV_ptr_A8 : ptr(A8) | []};
       __cil_tmp16_main:{VV_int : int | []};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_ptr_A8 : ptr(A8) | []};
       __cil_tmp11_main:{VV_ptr_A7 : ptr(A7) | []};
       __cil_tmp10_main:{VV_ptr_A7 : ptr(A7) | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp9_main)]} 
 rhs {VV_int : int | [(VV_int >= 0)]} 
 id 1 tag [2;10;-5;0] //main 
 
constraint:
 env  [tmp_main__SSA__blk_0_1:{VV_int : int | [(VV_int >= 1)]};
       tmp_main:{VV_int : int | []};
       tmp___1_main:{VV_ptr_A27 : ptr(A27) | []};
       tmp___0_main__SSA__blk_0_1:{VV_ptr_A7 : ptr(A7) | [&& [((VV_ptr_A7 + __cil_tmp9_main) = BLOCK_END([VV_ptr_A7])) ; (VV_ptr_A7 > 0) ; (VV_ptr_A7 = BLOCK_BEGIN([VV_ptr_A7]))]]};
       tmp___0_main:{VV_ptr_A28 : ptr(A28) | []};
       size_main__SSA__blk_0_1:{VV_int : int | [(VV_int = (tmp_main__SSA__blk_0_1 : int))]};
       size_main:{VV_int : int | []};
       retval_main__SSA__blk_0_1:{VV_ptr_A7 : ptr(A7) | [(VV_ptr_A7 = tmp___0_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A7]) = BLOCK_BEGIN([tmp___0_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A7]) = BLOCK_END([tmp___0_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A7]) = UNCHECKED([tmp___0_main__SSA__blk_0_1]))]};
       retval_main:{VV_ptr_A29 : ptr(A29) | []};
       mem_8_main:{VV_ptr_A8 : ptr(A8) | []};
       mem_7_main:{VV_ptr_A8 : ptr(A8) | [&& [(VV_ptr_A8 = (__cil_tmp12_main + 0)) ; (__cil_tmp12_main <= VV_ptr_A8)];(BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([__cil_tmp12_main]));(BLOCK_END([VV_ptr_A8]) = BLOCK_END([__cil_tmp12_main]));(UNCHECKED([VV_ptr_A8]) = UNCHECKED([__cil_tmp12_main]))]};
       lqn#1:{VV_int : int | [(VV_int = 0)]};
       lqn#0:{VV_ptr_A8 : ptr(A8) | [(VV_ptr_A8 = 0)]};
       i_main:{VV_int : int | []};
       __cil_tmp9_main:{VV_int : int | [&& [(VV_int = (8 : int)) ; (0 <= VV_int)]]};
       __cil_tmp21_main:{VV_ptr_A8 : ptr(A8) | []};
       __cil_tmp20_main:{VV_ptr_A8 : ptr(A8) | [(VV_ptr_A8 = lqn#0)]};
       __cil_tmp19_main:{VV_ptr_A8 : ptr(A8) | []};
       __cil_tmp18_main:{VV_int : int | []};
       __cil_tmp17_main:{VV_ptr_A8 : ptr(A8) | []};
       __cil_tmp16_main:{VV_int : int | [&& [(VV_int = (__cil_tmp15_main : int)) ; (0 <= VV_int)]]};
       __cil_tmp15_main:{VV_int : int | [(VV_int = (__cil_tmp14_main : int))]};
       __cil_tmp14_main:{VV_int : int | [(VV_int = (__cil_tmp13_main * 4))]};
       __cil_tmp13_main:{VV_int : int | [&& [(VV_int = (size_main__SSA__blk_0_1 : int)) ; (0 <= VV_int)]]};
       __cil_tmp12_main:{VV_ptr_A8 : ptr(A8) | [(VV_ptr_A8 = __cil_tmp20_main);(BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([__cil_tmp20_main]));(BLOCK_END([VV_ptr_A8]) = BLOCK_END([__cil_tmp20_main]));(UNCHECKED([VV_ptr_A8]) = UNCHECKED([__cil_tmp20_main]))]};
       __cil_tmp11_main:{VV_ptr_A7 : ptr(A7) | [&& [(VV_ptr_A7 = (__cil_tmp10_main + 4)) ; (__cil_tmp10_main <= VV_ptr_A7)];(BLOCK_BEGIN([VV_ptr_A7]) = BLOCK_BEGIN([__cil_tmp10_main]));(BLOCK_END([VV_ptr_A7]) = BLOCK_END([__cil_tmp10_main]));(UNCHECKED([VV_ptr_A7]) = UNCHECKED([__cil_tmp10_main]))]};
       __cil_tmp10_main:{VV_ptr_A7 : ptr(A7) | [(VV_ptr_A7 = retval_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A7]) = BLOCK_BEGIN([retval_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A7]) = BLOCK_END([retval_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A7]) = UNCHECKED([retval_main__SSA__blk_0_1]))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       FINAL0:{VV_int : int | [(VV_int = (DEREF([(BLOCK_BEGIN([__cil_tmp11_main]) + 4)]) : int));(VV_int = size_main__SSA__blk_0_1)]};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp16_main)]} 
 rhs {VV_int : int | [(VV_int >= 0)]} 
 id 3 tag [2;10;-18;0] //main 
 
 
 
//solution: k_32 := [(0 <= VV_int);(1 = 0);(VV_int < tmp_main__SSA__blk_0_1);(VV_int < tmp_main);(VV_int < size_main__SSA__blk_0_1);(VV_int < size_main);(VV_int < lqn#1);(VV_int < i_main__SSA__phi_3);(VV_int < i_main__SSA__blk_0_1);(VV_int < i_main);(VV_int < FINAL0);(0 < VV_int);(VV_int <= tmp_main__SSA__blk_0_1);(VV_int <= tmp_main);(VV_int <= size_main__SSA__blk_0_1);(VV_int <= size_main);(VV_int <= lqn#1);(VV_int <= i_main__SSA__phi_3);(VV_int <= i_main__SSA__blk_0_1);(VV_int <= i_main);(VV_int <= FINAL0);(VV_int = 0);(VV_int > tmp_main__SSA__blk_0_1);(VV_int > tmp_main);(VV_int > size_main__SSA__blk_0_1);(VV_int > size_main);(VV_int > lqn#1);(VV_int > i_main__SSA__phi_3);(VV_int > i_main__SSA__blk_0_1);(VV_int > i_main);(VV_int > FINAL0);(VV_int >= tmp_main__SSA__blk_0_1);(VV_int >= tmp_main);(VV_int >= size_main__SSA__blk_0_1);(VV_int >= size_main);(VV_int >= lqn#1);(VV_int >= i_main__SSA__phi_3);(VV_int >= i_main__SSA__blk_0_1);(VV_int >= i_main);(VV_int >= FINAL0)] 

//solution: k_31 := [(0 <= VV_int);(1 = 0);(VV_int < tmp_main__SSA__blk_0_1);(VV_int < tmp_main);(VV_int < size_main__SSA__blk_0_1);(VV_int < size_main);(VV_int < lqn#1);(VV_int < i_main__SSA__phi_3);(VV_int < i_main__SSA__blk_0_1);(VV_int < i_main);(VV_int < FINAL0);(VV_int < C34#Ix#4);(0 < VV_int);(VV_int <= tmp_main__SSA__blk_0_1);(VV_int <= tmp_main);(VV_int <= size_main__SSA__blk_0_1);(VV_int <= size_main);(VV_int <= lqn#1);(VV_int <= i_main__SSA__phi_3);(VV_int <= i_main__SSA__blk_0_1);(VV_int <= i_main);(VV_int <= FINAL0);(VV_int <= C34#Ix#4);(VV_int = 0);(VV_int > tmp_main__SSA__blk_0_1);(VV_int > tmp_main);(VV_int > size_main__SSA__blk_0_1);(VV_int > size_main);(VV_int > lqn#1);(VV_int > i_main__SSA__phi_3);(VV_int > i_main__SSA__blk_0_1);(VV_int > i_main);(VV_int > FINAL0);(VV_int > C34#Ix#4);(VV_int >= tmp_main__SSA__blk_0_1);(VV_int >= tmp_main);(VV_int >= size_main__SSA__blk_0_1);(VV_int >= size_main);(VV_int >= lqn#1);(VV_int >= i_main__SSA__phi_3);(VV_int >= i_main__SSA__blk_0_1);(VV_int >= i_main);(VV_int >= FINAL0);(VV_int >= C34#Ix#4)] 

//solution: k_30 := [(((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 4) = 0);((VV_ptr_A8 != 0) => && [(0 < VV_ptr_A8) ; (BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8) ; (VV_ptr_A8 < BLOCK_END([VV_ptr_A8]))]);(BLOCK_END([VV_ptr_A8]) = BLOCK_END([tmp___1_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A8]) = BLOCK_END([lqn#0]));(BLOCK_END([VV_ptr_A8]) = BLOCK_END([FINAL1]));(BLOCK_END([VV_ptr_A8]) = BLOCK_END([C34#Ix#0]));((VV_ptr_A8 != 0) => ((BLOCK_END([VV_ptr_A8]) - VV_ptr_A8) >= 4));((VV_ptr_A8 + (4 * tmp_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * tmp_main)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * size_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * size_main)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * lqn#1)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * i_main__SSA__phi_3)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * i_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * i_main)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * FINAL0)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * C34#Ix#4)) <= BLOCK_END([VV_ptr_A8]));(VV_ptr_A8 < BLOCK_END([VV_ptr_A8]));(0 < VV_ptr_A8);(BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([tmp___1_main__SSA__blk_0_1]));(BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([lqn#0]));(BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([FINAL1]));(BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([C34#Ix#0]));((VV_ptr_A8 != 0) => (VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8])));(0 <= VV_ptr_A8);(VV_ptr_A8 = 0);(VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8]));(BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8);(UNCHECKED([VV_ptr_A8]) = 1);(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + tmp_main__SSA__blk_0_1));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + tmp_main));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + size_main__SSA__blk_0_1));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + size_main));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + lqn#1));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + i_main__SSA__phi_3));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + i_main__SSA__blk_0_1));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + i_main));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + FINAL0));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + C34#Ix#4));(((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 8) = 0)] 

//solution: k_29 := [(0 <= VV_int);(1 = 0);(VV_int < tmp_main);(VV_int < size_main);(VV_int < i_main);(VV_int < A7#Ix#4);(0 < VV_int);(VV_int <= tmp_main);(VV_int <= size_main);(VV_int <= i_main);(VV_int <= A7#Ix#4);(VV_int = 0);(VV_int > tmp_main);(VV_int > size_main);(VV_int > i_main);(VV_int > A7#Ix#4);(VV_int >= tmp_main);(VV_int >= size_main);(VV_int >= i_main);(VV_int >= A7#Ix#4)] 

//solution: k_28 := [(((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 4) = 0);((VV_ptr_A8 != 0) => && [(0 < VV_ptr_A8) ; (BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8) ; (VV_ptr_A8 < BLOCK_END([VV_ptr_A8]))]);(BLOCK_END([VV_ptr_A8]) = BLOCK_END([A7#Ix#0]));((VV_ptr_A8 != 0) => ((BLOCK_END([VV_ptr_A8]) - VV_ptr_A8) >= 4));((VV_ptr_A8 + (4 * tmp_main)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * size_main)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * i_main)) <= BLOCK_END([VV_ptr_A8]));((VV_ptr_A8 + (4 * A7#Ix#4)) <= BLOCK_END([VV_ptr_A8]));(VV_ptr_A8 < BLOCK_END([VV_ptr_A8]));(0 < VV_ptr_A8);(BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([A7#Ix#0]));((VV_ptr_A8 != 0) => (VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8])));(0 <= VV_ptr_A8);(VV_ptr_A8 = 0);(VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8]));(BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8);(UNCHECKED([VV_ptr_A8]) = 1);(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + tmp_main));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + size_main));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + i_main));(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + A7#Ix#4));(((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 8) = 0)] 

//solution: k_27 := [(0 <= VV_int);(1 = 0);(VV_int < tmp_main);(VV_int < size_main);(VV_int < i_main);(0 < VV_int);(VV_int <= tmp_main);(VV_int <= size_main);(VV_int <= i_main);(VV_int = 0);(VV_int > tmp_main);(VV_int > size_main);(VV_int > i_main);(VV_int >= tmp_main);(VV_int >= size_main);(VV_int >= i_main)] 

//solution: k_26 := [(((VV_ptr_A7 - BLOCK_BEGIN([VV_ptr_A7])) mod 4) = 0);((VV_ptr_A7 != 0) => && [(0 < VV_ptr_A7) ; (BLOCK_BEGIN([VV_ptr_A7]) <= VV_ptr_A7) ; (VV_ptr_A7 < BLOCK_END([VV_ptr_A7]))]);((VV_ptr_A7 != 0) => ((BLOCK_END([VV_ptr_A7]) - VV_ptr_A7) >= 4));(VV_ptr_A7 < BLOCK_END([VV_ptr_A7]));(0 < VV_ptr_A7);((VV_ptr_A7 != 0) => (VV_ptr_A7 = BLOCK_BEGIN([VV_ptr_A7])));(0 <= VV_ptr_A7);(VV_ptr_A7 = 0);(VV_ptr_A7 = BLOCK_BEGIN([VV_ptr_A7]));(BLOCK_BEGIN([VV_ptr_A7]) <= VV_ptr_A7);(UNCHECKED([VV_ptr_A7]) = 1);(((VV_ptr_A7 - BLOCK_BEGIN([VV_ptr_A7])) mod 8) = 0)] 

//solution: k_25 := [(0 <= VV_int);(1 = 0);(VV_int < A7#Ix#4);(0 < VV_int);(VV_int <= A7#Ix#4);(VV_int = 0);(VV_int > A7#Ix#4);(VV_int >= A7#Ix#4)] 

//solution: k_24 := [(((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 4) = 0);((VV_ptr_A8 != 0) => && [(0 < VV_ptr_A8) ; (BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8) ; (VV_ptr_A8 < BLOCK_END([VV_ptr_A8]))]);(BLOCK_END([VV_ptr_A8]) = BLOCK_END([A7#Ix#0]));((VV_ptr_A8 != 0) => ((BLOCK_END([VV_ptr_A8]) - VV_ptr_A8) >= 4));((VV_ptr_A8 + (4 * A7#Ix#4)) <= BLOCK_END([VV_ptr_A8]));(VV_ptr_A8 < BLOCK_END([VV_ptr_A8]));(0 < VV_ptr_A8);(BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([A7#Ix#0]));((VV_ptr_A8 != 0) => (VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8])));(0 <= VV_ptr_A8);(VV_ptr_A8 = 0);(VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8]));(BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8);(UNCHECKED([VV_ptr_A8]) = 1);(BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + A7#Ix#4));(((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 8) = 0)] 

//solution: k_23 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0)] 

solution: k_32 := [((VV_int >= FINAL0), GEQ[~A0:=FINAL0]);((VV_int >= i_main), GEQ[~A0:=i_main]);((VV_int >= i_main__SSA__blk_0_1), GEQ[~A0:=i_main__SSA__blk_0_1]);((VV_int >= i_main__SSA__phi_3), GEQ[~A0:=i_main__SSA__phi_3]);((VV_int >= lqn#1), GEQ[~A0:=lqn#1]);((VV_int >= size_main), GEQ[~A0:=size_main]);((VV_int >= size_main__SSA__blk_0_1), GEQ[~A0:=size_main__SSA__blk_0_1]);((VV_int >= tmp_main), GEQ[~A0:=tmp_main]);((VV_int >= tmp_main__SSA__blk_0_1), GEQ[~A0:=tmp_main__SSA__blk_0_1]);((VV_int > FINAL0), GT[~A0:=FINAL0]);((VV_int > i_main), GT[~A0:=i_main]);((VV_int > i_main__SSA__blk_0_1), GT[~A0:=i_main__SSA__blk_0_1]);((VV_int > i_main__SSA__phi_3), GT[~A0:=i_main__SSA__phi_3]);((VV_int > lqn#1), GT[~A0:=lqn#1]);((VV_int > size_main), GT[~A0:=size_main]);((VV_int > size_main__SSA__blk_0_1), GT[~A0:=size_main__SSA__blk_0_1]);((VV_int > tmp_main), GT[~A0:=tmp_main]);((VV_int > tmp_main__SSA__blk_0_1), GT[~A0:=tmp_main__SSA__blk_0_1]);((VV_int = 0), EQZ);((VV_int <= FINAL0), LEQ[~A0:=FINAL0]);((VV_int <= i_main), LEQ[~A0:=i_main]);((VV_int <= i_main__SSA__blk_0_1), LEQ[~A0:=i_main__SSA__blk_0_1]);((VV_int <= i_main__SSA__phi_3), LEQ[~A0:=i_main__SSA__phi_3]);((VV_int <= lqn#1), LEQ[~A0:=lqn#1]);((VV_int <= size_main), LEQ[~A0:=size_main]);((VV_int <= size_main__SSA__blk_0_1), LEQ[~A0:=size_main__SSA__blk_0_1]);((VV_int <= tmp_main), LEQ[~A0:=tmp_main]);((VV_int <= tmp_main__SSA__blk_0_1), LEQ[~A0:=tmp_main__SSA__blk_0_1]);((0 < VV_int), GTZ);((VV_int < FINAL0), LT[~A0:=FINAL0]);((VV_int < i_main), LT[~A0:=i_main]);((VV_int < i_main__SSA__blk_0_1), LT[~A0:=i_main__SSA__blk_0_1]);((VV_int < i_main__SSA__phi_3), LT[~A0:=i_main__SSA__phi_3]);((VV_int < lqn#1), LT[~A0:=lqn#1]);((VV_int < size_main), LT[~A0:=size_main]);((VV_int < size_main__SSA__blk_0_1), LT[~A0:=size_main__SSA__blk_0_1]);((VV_int < tmp_main), LT[~A0:=tmp_main]);((VV_int < tmp_main__SSA__blk_0_1), LT[~A0:=tmp_main__SSA__blk_0_1]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_31 := [((VV_int >= C34#Ix#4), GEQ[~A0:=C34#Ix#4]);((VV_int >= FINAL0), GEQ[~A0:=FINAL0]);((VV_int >= i_main), GEQ[~A0:=i_main]);((VV_int >= i_main__SSA__blk_0_1), GEQ[~A0:=i_main__SSA__blk_0_1]);((VV_int >= i_main__SSA__phi_3), GEQ[~A0:=i_main__SSA__phi_3]);((VV_int >= lqn#1), GEQ[~A0:=lqn#1]);((VV_int >= size_main), GEQ[~A0:=size_main]);((VV_int >= size_main__SSA__blk_0_1), GEQ[~A0:=size_main__SSA__blk_0_1]);((VV_int >= tmp_main), GEQ[~A0:=tmp_main]);((VV_int >= tmp_main__SSA__blk_0_1), GEQ[~A0:=tmp_main__SSA__blk_0_1]);((VV_int > C34#Ix#4), GT[~A0:=C34#Ix#4]);((VV_int > FINAL0), GT[~A0:=FINAL0]);((VV_int > i_main), GT[~A0:=i_main]);((VV_int > i_main__SSA__blk_0_1), GT[~A0:=i_main__SSA__blk_0_1]);((VV_int > i_main__SSA__phi_3), GT[~A0:=i_main__SSA__phi_3]);((VV_int > lqn#1), GT[~A0:=lqn#1]);((VV_int > size_main), GT[~A0:=size_main]);((VV_int > size_main__SSA__blk_0_1), GT[~A0:=size_main__SSA__blk_0_1]);((VV_int > tmp_main), GT[~A0:=tmp_main]);((VV_int > tmp_main__SSA__blk_0_1), GT[~A0:=tmp_main__SSA__blk_0_1]);((VV_int = 0), EQZ);((VV_int <= C34#Ix#4), LEQ[~A0:=C34#Ix#4]);((VV_int <= FINAL0), LEQ[~A0:=FINAL0]);((VV_int <= i_main), LEQ[~A0:=i_main]);((VV_int <= i_main__SSA__blk_0_1), LEQ[~A0:=i_main__SSA__blk_0_1]);((VV_int <= i_main__SSA__phi_3), LEQ[~A0:=i_main__SSA__phi_3]);((VV_int <= lqn#1), LEQ[~A0:=lqn#1]);((VV_int <= size_main), LEQ[~A0:=size_main]);((VV_int <= size_main__SSA__blk_0_1), LEQ[~A0:=size_main__SSA__blk_0_1]);((VV_int <= tmp_main), LEQ[~A0:=tmp_main]);((VV_int <= tmp_main__SSA__blk_0_1), LEQ[~A0:=tmp_main__SSA__blk_0_1]);((0 < VV_int), GTZ);((VV_int < C34#Ix#4), LT[~A0:=C34#Ix#4]);((VV_int < FINAL0), LT[~A0:=FINAL0]);((VV_int < i_main), LT[~A0:=i_main]);((VV_int < i_main__SSA__blk_0_1), LT[~A0:=i_main__SSA__blk_0_1]);((VV_int < i_main__SSA__phi_3), LT[~A0:=i_main__SSA__phi_3]);((VV_int < lqn#1), LT[~A0:=lqn#1]);((VV_int < size_main), LT[~A0:=size_main]);((VV_int < size_main__SSA__blk_0_1), LT[~A0:=size_main__SSA__blk_0_1]);((VV_int < tmp_main), LT[~A0:=tmp_main]);((VV_int < tmp_main__SSA__blk_0_1), LT[~A0:=tmp_main__SSA__blk_0_1]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_30 := [((((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 8) = 0), ARRAYMOD0[VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + C34#Ix#4)), SIZE0[~A0:=C34#Ix#4][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + FINAL0)), SIZE0[~A0:=FINAL0][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + i_main)), SIZE0[~A0:=i_main][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + i_main__SSA__blk_0_1)), SIZE0[~A0:=i_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + i_main__SSA__phi_3)), SIZE0[~A0:=i_main__SSA__phi_3][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + lqn#1)), SIZE0[~A0:=lqn#1][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + size_main)), SIZE0[~A0:=size_main][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + size_main__SSA__blk_0_1)), SIZE0[~A0:=size_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + tmp_main)), SIZE0[~A0:=tmp_main][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + tmp_main__SSA__blk_0_1)), SIZE0[~A0:=tmp_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A8]);((UNCHECKED([VV_ptr_A8]) = 1), UCH[VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8), LB[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8])), ISBS[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 = 0), EQZ0[VV_ptr_0:=VV_ptr_A8]);((0 <= VV_ptr_A8), GTZP0[VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => (VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([C34#Ix#0])), BEGIN[~A0:=C34#Ix#0][VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([FINAL1])), BEGIN[~A0:=FINAL1][VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([lqn#0])), BEGIN[~A0:=lqn#0][VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([tmp___1_main__SSA__blk_0_1])), BEGIN[~A0:=tmp___1_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A8]);((0 < VV_ptr_A8), GTZP[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 < BLOCK_END([VV_ptr_A8])), UB[VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * C34#Ix#4)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=C34#Ix#4][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * FINAL0)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=FINAL0][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * i_main)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=i_main][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * i_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=i_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * i_main__SSA__phi_3)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=i_main__SSA__phi_3][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * lqn#1)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=lqn#1][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * size_main)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=size_main][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * size_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=size_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * tmp_main)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=tmp_main][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * tmp_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=tmp_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => ((BLOCK_END([VV_ptr_A8]) - VV_ptr_A8) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) = BLOCK_END([C34#Ix#0])), END[~A0:=C34#Ix#0][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) = BLOCK_END([FINAL1])), END[~A0:=FINAL1][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) = BLOCK_END([lqn#0])), END[~A0:=lqn#0][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) = BLOCK_END([tmp___1_main__SSA__blk_0_1])), END[~A0:=tmp___1_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => && [(0 < VV_ptr_A8) ; (BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8) ; (VV_ptr_A8 < BLOCK_END([VV_ptr_A8]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A8]);((((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 4) = 0), ARRAYMOD[VV_ptr_0:=VV_ptr_A8])] 

solution: k_29 := [((VV_int >= A7#Ix#4), GEQ[~A0:=A7#Ix#4]);((VV_int >= i_main), GEQ[~A0:=i_main]);((VV_int >= size_main), GEQ[~A0:=size_main]);((VV_int >= tmp_main), GEQ[~A0:=tmp_main]);((VV_int > A7#Ix#4), GT[~A0:=A7#Ix#4]);((VV_int > i_main), GT[~A0:=i_main]);((VV_int > size_main), GT[~A0:=size_main]);((VV_int > tmp_main), GT[~A0:=tmp_main]);((VV_int = 0), EQZ);((VV_int <= A7#Ix#4), LEQ[~A0:=A7#Ix#4]);((VV_int <= i_main), LEQ[~A0:=i_main]);((VV_int <= size_main), LEQ[~A0:=size_main]);((VV_int <= tmp_main), LEQ[~A0:=tmp_main]);((0 < VV_int), GTZ);((VV_int < A7#Ix#4), LT[~A0:=A7#Ix#4]);((VV_int < i_main), LT[~A0:=i_main]);((VV_int < size_main), LT[~A0:=size_main]);((VV_int < tmp_main), LT[~A0:=tmp_main]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_28 := [((((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 8) = 0), ARRAYMOD0[VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + A7#Ix#4)), SIZE0[~A0:=A7#Ix#4][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + i_main)), SIZE0[~A0:=i_main][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + size_main)), SIZE0[~A0:=size_main][VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + tmp_main)), SIZE0[~A0:=tmp_main][VV_ptr_0:=VV_ptr_A8]);((UNCHECKED([VV_ptr_A8]) = 1), UCH[VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8), LB[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8])), ISBS[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 = 0), EQZ0[VV_ptr_0:=VV_ptr_A8]);((0 <= VV_ptr_A8), GTZP0[VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => (VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([A7#Ix#0])), BEGIN[~A0:=A7#Ix#0][VV_ptr_0:=VV_ptr_A8]);((0 < VV_ptr_A8), GTZP[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 < BLOCK_END([VV_ptr_A8])), UB[VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * A7#Ix#4)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=A7#Ix#4][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * i_main)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=i_main][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * size_main)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=size_main][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * tmp_main)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=tmp_main][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => ((BLOCK_END([VV_ptr_A8]) - VV_ptr_A8) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) = BLOCK_END([A7#Ix#0])), END[~A0:=A7#Ix#0][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => && [(0 < VV_ptr_A8) ; (BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8) ; (VV_ptr_A8 < BLOCK_END([VV_ptr_A8]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A8]);((((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 4) = 0), ARRAYMOD[VV_ptr_0:=VV_ptr_A8])] 

solution: k_27 := [((VV_int >= i_main), GEQ[~A0:=i_main]);((VV_int >= size_main), GEQ[~A0:=size_main]);((VV_int >= tmp_main), GEQ[~A0:=tmp_main]);((VV_int > i_main), GT[~A0:=i_main]);((VV_int > size_main), GT[~A0:=size_main]);((VV_int > tmp_main), GT[~A0:=tmp_main]);((VV_int = 0), EQZ);((VV_int <= i_main), LEQ[~A0:=i_main]);((VV_int <= size_main), LEQ[~A0:=size_main]);((VV_int <= tmp_main), LEQ[~A0:=tmp_main]);((0 < VV_int), GTZ);((VV_int < i_main), LT[~A0:=i_main]);((VV_int < size_main), LT[~A0:=size_main]);((VV_int < tmp_main), LT[~A0:=tmp_main]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_26 := [((((VV_ptr_A7 - BLOCK_BEGIN([VV_ptr_A7])) mod 8) = 0), ARRAYMOD0[VV_ptr_0:=VV_ptr_A7]);((UNCHECKED([VV_ptr_A7]) = 1), UCH[VV_ptr_0:=VV_ptr_A7]);((BLOCK_BEGIN([VV_ptr_A7]) <= VV_ptr_A7), LB[VV_ptr_0:=VV_ptr_A7]);((VV_ptr_A7 = BLOCK_BEGIN([VV_ptr_A7])), ISBS[VV_ptr_0:=VV_ptr_A7]);((VV_ptr_A7 = 0), EQZ0[VV_ptr_0:=VV_ptr_A7]);((0 <= VV_ptr_A7), GTZP0[VV_ptr_0:=VV_ptr_A7]);(((VV_ptr_A7 != 0) => (VV_ptr_A7 = BLOCK_BEGIN([VV_ptr_A7]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A7]);((0 < VV_ptr_A7), GTZP[VV_ptr_0:=VV_ptr_A7]);((VV_ptr_A7 < BLOCK_END([VV_ptr_A7])), UB[VV_ptr_0:=VV_ptr_A7]);(((VV_ptr_A7 != 0) => ((BLOCK_END([VV_ptr_A7]) - VV_ptr_A7) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A7]);(((VV_ptr_A7 != 0) => && [(0 < VV_ptr_A7) ; (BLOCK_BEGIN([VV_ptr_A7]) <= VV_ptr_A7) ; (VV_ptr_A7 < BLOCK_END([VV_ptr_A7]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A7]);((((VV_ptr_A7 - BLOCK_BEGIN([VV_ptr_A7])) mod 4) = 0), ARRAYMOD[VV_ptr_0:=VV_ptr_A7])] 

solution: k_25 := [((VV_int >= A7#Ix#4), GEQ[~A0:=A7#Ix#4]);((VV_int > A7#Ix#4), GT[~A0:=A7#Ix#4]);((VV_int = 0), EQZ);((VV_int <= A7#Ix#4), LEQ[~A0:=A7#Ix#4]);((0 < VV_int), GTZ);((VV_int < A7#Ix#4), LT[~A0:=A7#Ix#4]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_24 := [((((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 8) = 0), ARRAYMOD0[VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) >= (BLOCK_BEGIN([VV_ptr_A8]) + A7#Ix#4)), SIZE0[~A0:=A7#Ix#4][VV_ptr_0:=VV_ptr_A8]);((UNCHECKED([VV_ptr_A8]) = 1), UCH[VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8), LB[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8])), ISBS[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 = 0), EQZ0[VV_ptr_0:=VV_ptr_A8]);((0 <= VV_ptr_A8), GTZP0[VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => (VV_ptr_A8 = BLOCK_BEGIN([VV_ptr_A8]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A8]);((BLOCK_BEGIN([VV_ptr_A8]) = BLOCK_BEGIN([A7#Ix#0])), BEGIN[~A0:=A7#Ix#0][VV_ptr_0:=VV_ptr_A8]);((0 < VV_ptr_A8), GTZP[VV_ptr_0:=VV_ptr_A8]);((VV_ptr_A8 < BLOCK_END([VV_ptr_A8])), UB[VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 + (4 * A7#Ix#4)) <= BLOCK_END([VV_ptr_A8])), SIZE[~A0:=A7#Ix#4][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => ((BLOCK_END([VV_ptr_A8]) - VV_ptr_A8) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A8]);((BLOCK_END([VV_ptr_A8]) = BLOCK_END([A7#Ix#0])), END[~A0:=A7#Ix#0][VV_ptr_0:=VV_ptr_A8]);(((VV_ptr_A8 != 0) => && [(0 < VV_ptr_A8) ; (BLOCK_BEGIN([VV_ptr_A8]) <= VV_ptr_A8) ; (VV_ptr_A8 < BLOCK_END([VV_ptr_A8]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A8]);((((VV_ptr_A8 - BLOCK_BEGIN([VV_ptr_A8])) mod 4) = 0), ARRAYMOD[VV_ptr_0:=VV_ptr_A8])] 

solution: k_23 := [((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

//QUALIFIERS 

qualif WORDSIZE(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => ((BLOCK_END([VV_ptr_0]) - VV_ptr_0) >= 4))
      
qualif UCH(VV_ptr_0:ptr(0)):(UNCHECKED([VV_ptr_0]) = 1)
      
qualif UB(VV_ptr_0:ptr(0)):(VV_ptr_0 < BLOCK_END([VV_ptr_0]))
      
qualif SIZE0(VV_ptr_0:ptr(0)):(BLOCK_END([VV_ptr_0]) >= (BLOCK_BEGIN([VV_ptr_0]) + ~A0))
      
qualif SIZE(VV_ptr_0:ptr(0)):((VV_ptr_0 + (4 * ~A0)) <= BLOCK_END([VV_ptr_0]))
      
qualif NULLorVALID(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => && [(0 < VV_ptr_0) ; (BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0) ; (VV_ptr_0 < BLOCK_END([VV_ptr_0]))])
      
qualif NULLorBEGIN(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => (VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0])))
      
qualif LT(VV_int:int):(VV_int < ~A0)
      
qualif LEQ(VV_int:int):(VV_int <= ~A0)
      
qualif LB(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0)
      
qualif ISBS(VV_ptr_0:ptr(0)):(VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0]))
      
qualif GTZP0(VV_ptr_0:ptr(0)):(0 <= VV_ptr_0)
      
qualif GTZP(VV_ptr_0:ptr(0)):(0 < VV_ptr_0)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GT(VV_int:int):(VV_int > ~A0)
      
qualif GEZ(VV_int:int):(0 <= VV_int)
      
qualif GEQ(VV_int:int):(VV_int >= ~A0)
      
qualif FALSE(VV_int:int):(1 = 0)
      
qualif EQZ0(VV_ptr_0:ptr(0)):(VV_ptr_0 = 0)
      
qualif EQZ(VV_int:int):(VV_int = 0)
      
qualif END(VV_ptr_0:ptr(0)):(BLOCK_END([VV_ptr_0]) = BLOCK_END([~A0]))
      
qualif BEGIN(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) = BLOCK_BEGIN([~A0]))
      
qualif ARRAYMOD0(VV_ptr_0:ptr(0)):(((VV_ptr_0 - BLOCK_BEGIN([VV_ptr_0])) mod 8) = 0)
      
qualif ARRAYMOD(VV_ptr_0:ptr(0)):(((VV_ptr_0 - BLOCK_BEGIN([VV_ptr_0])) mod 4) = 0)
      
 
