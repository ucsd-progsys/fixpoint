constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       __cil_tmp1_main:{VV_int : int | []};
       __cil_tmp16_main:{VV_int : int | []};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]} 
 rhs {VV_int : int | [k_0]} 
 id 1 tag [1;3;-1;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       __cil_tmp1_main:{VV_int : int | []};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | []} 
 rhs {VV_int : int | [k_1]} 
 id 2 tag [1;1;-1;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       __cil_tmp1_main:{VV_int : int | []};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp14_main)]} 
 rhs {VV_int : int | [k_2]} 
 id 3 tag [1;1;-2;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]} 
 rhs {VV_int : int | [k_3]} 
 id 4 tag [1;1;-3;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (__cil_tmp2_main : int))]} 
 rhs {VV_int : int | [k_4]} 
 id 5 tag [1;1;-4;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]} 
 rhs {VV_int : int | [k_5]} 
 id 6 tag [1;1;-6;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | []} 
 rhs {VV_int : int | [k_6]} 
 id 7 tag [1;1;-7;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (__cil_tmp5_main : int))]} 
 rhs {VV_int : int | [k_7]} 
 id 8 tag [1;1;-8;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main : int))]};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = ((__cil_tmp6_main = 1) ? 1 : 0))]} 
 rhs {VV_int : int | [k_8]} 
 id 9 tag [1;1;-9;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | [(VV_int = ((__cil_tmp6_main = 1) ? 1 : 0))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main : int))]};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (__cil_tmp7_main : int))]} 
 rhs {VV_int : int | [k_9]} 
 id 10 tag [1;1;-10;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (__cil_tmp7_main : int))]};
       __cil_tmp7_main:{VV_int : int | [(VV_int = ((__cil_tmp6_main = 1) ? 1 : 0))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main : int))]};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 8)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]} 
 rhs {VV_int : int | [k_10]} 
 id 11 tag [1;1;-12;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 8)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (__cil_tmp7_main : int))]};
       __cil_tmp7_main:{VV_int : int | [(VV_int = ((__cil_tmp6_main = 1) ? 1 : 0))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main : int))]};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | []} 
 rhs {VV_int : int | [k_11]} 
 id 12 tag [1;1;-13;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 8)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (__cil_tmp7_main : int))]};
       __cil_tmp7_main:{VV_int : int | [(VV_int = ((__cil_tmp6_main = 1) ? 1 : 0))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main : int))]};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp15_main)]} 
 rhs {VV_int : int | [k_12]} 
 id 13 tag [1;1;-14;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 8)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (__cil_tmp7_main : int))]};
       __cil_tmp7_main:{VV_int : int | [(VV_int = ((__cil_tmp6_main = 1) ? 1 : 0))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main : int))]};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | []};
       __cil_tmp10_main:{VV_int : int | [(VV_int = __cil_tmp15_main)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (__cil_tmp10_main : int))]} 
 rhs {VV_int : int | [k_13]} 
 id 14 tag [1;1;-15;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 8)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (__cil_tmp7_main : int))]};
       __cil_tmp7_main:{VV_int : int | [(VV_int = ((__cil_tmp6_main = 1) ? 1 : 0))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main : int))]};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | []};
       __cil_tmp11_main:{VV_int : int | [(VV_int = (__cil_tmp10_main : int))]};
       __cil_tmp10_main:{VV_int : int | [(VV_int = __cil_tmp15_main)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = ((__cil_tmp11_main = 2) ? 1 : 0))]} 
 rhs {VV_int : int | [k_14]} 
 id 15 tag [1;1;-16;0] //main 
 
constraint:
 env  [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 8)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (__cil_tmp7_main : int))]};
       __cil_tmp7_main:{VV_int : int | [(VV_int = ((__cil_tmp6_main = 1) ? 1 : 0))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main : int))]};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp16_main + 4)) ; (__cil_tmp16_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp16_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((__cil_tmp1_main = 0) ? 1 : 0))]};
       __cil_tmp1_main:{VV_int : int | [(VV_int = __cil_tmp14_main)]};
       __cil_tmp16_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp15_main:{VV_int : int | []};
       __cil_tmp14_main:{VV_int : int | []};
       __cil_tmp13_main:{VV_int : int | []};
       __cil_tmp12_main:{VV_int : int | [(VV_int = ((__cil_tmp11_main = 2) ? 1 : 0))]};
       __cil_tmp11_main:{VV_int : int | [(VV_int = (__cil_tmp10_main : int))]};
       __cil_tmp10_main:{VV_int : int | [(VV_int = __cil_tmp15_main)]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (__cil_tmp12_main : int))]} 
 rhs {VV_int : int | [k_15]} 
 id 16 tag [1;1;-17;0] //main 
 
 
wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_15]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_14]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_13]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_12]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_11]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_10]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_9]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_8]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_7]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_6]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_5]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_4]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_3]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_2]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_1]} 
      
    

    wf: env [t__lcc_heapify__:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_0]} 
      
     
//solution: k_9 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_8 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_7 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_6 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_5 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_4 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_3 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_2 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_15 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_14 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_13 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_12 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_11 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_10 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_1 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

//solution: k_0 := [(VV_int = 4);(0 = 1);(VV_int = (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1));(VV_int >= 1);(0 <= VV_int);(0 < VV_int);(VV_int = 1);(VV_int >= 0);(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 8);(VV_int = (BLOCK_BEGIN([VV_int]) + 4));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 8));(VV_int >= (BLOCK_BEGIN([VV_int]) + 4));(VV_int = 0);(0 = VV_int);(VV_int = 8);(VV_int >= (BLOCK_BEGIN([VV_int]) + 8));(0 != VV_int);(VV_int >= 4)] 

solution: k_9 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_8 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_7 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_6 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_5 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_4 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_3 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_2 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_15 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_14 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_13 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_12 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_11 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_10 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_1 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

solution: k_0 := [((VV_int >= 4), SCALAR14);((0 != VV_int), NEZ0);((VV_int >= (BLOCK_BEGIN([VV_int]) + 8)), SCALAR13);((VV_int = 8), SCALAR12);((0 = VV_int), EQZ);((VV_int = 0), SCALAR11);((VV_int >= (BLOCK_BEGIN([VV_int]) + 4)), SCALAR10);((VV_int = (BLOCK_BEGIN([VV_int]) + 8)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 4)), SCALAR7);((VV_int >= 8), SCALAR6);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR5);((VV_int >= 0), SCALAR4);((VV_int = 1), SCALAR3);((0 < VV_int), GTZ);((0 <= VV_int), GEZ);((VV_int >= 1), SCALAR2);((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR1);((VV_int = (BLOCK_BEGIN([VV_int]) + 1)), SCALAR0);((0 = 1), NEZ);((VV_int = 4), SCALAR)] 

//QUALIFIERS 

qualif SCALAR9(VV_int:int):(VV_int = (BLOCK_BEGIN([VV_int]) + 8))
      
qualif SCALAR8(VV_int:int):(VV_int >= (BLOCK_BEGIN([VV_int]) + 0))
      
qualif SCALAR7(VV_int:int):(VV_int = (BLOCK_BEGIN([VV_int]) + 4))
      
qualif SCALAR6(VV_int:int):(VV_int >= 8)
      
qualif SCALAR5(VV_int:int):(VV_int = (BLOCK_BEGIN([VV_int]) + 0))
      
qualif SCALAR4(VV_int:int):(VV_int >= 0)
      
qualif SCALAR3(VV_int:int):(VV_int = 1)
      
qualif SCALAR2(VV_int:int):(VV_int >= 1)
      
qualif SCALAR14(VV_int:int):(VV_int >= 4)
      
qualif SCALAR13(VV_int:int):(VV_int >= (BLOCK_BEGIN([VV_int]) + 8))
      
qualif SCALAR12(VV_int:int):(VV_int = 8)
      
qualif SCALAR11(VV_int:int):(VV_int = 0)
      
qualif SCALAR10(VV_int:int):(VV_int >= (BLOCK_BEGIN([VV_int]) + 4))
      
qualif SCALAR1(VV_int:int):(VV_int >= (BLOCK_BEGIN([VV_int]) + 1))
      
qualif SCALAR0(VV_int:int):(VV_int = (BLOCK_BEGIN([VV_int]) + 1))
      
qualif SCALAR(VV_int:int):(VV_int = 4)
      
qualif NEZ0(VV_int:int):(0 != VV_int) 
qualif NEZ(VV_int:int):(0 = 1)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GEZ(VV_int:int):(0 <= VV_int)
      
qualif EQZ(VV_int:int):(0 = VV_int) 
 
