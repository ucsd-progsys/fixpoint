del_dep: [2;1;-7;0] => * 
del_dep: [2;1;-11;0] => * 
constraint:
 env  [x_main:{VV_int : int | []};
       p:{VV_ptr_A3 : ptr(A3) | []};
       a:{VV_ptr_A4 : ptr(A4) | []};
       __cil_tmp7_main:{VV_ptr_A3 : ptr(A3) | [k_10]};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_ptr_A3 : ptr(A3) | [&& [(VV_ptr_A3 = (__cil_tmp7_main + __cil_tmp2_main)) ; (__cil_tmp7_main <= VV_ptr_A3)];(BLOCK_BEGIN([VV_ptr_A3]) = BLOCK_BEGIN([__cil_tmp7_main]));(BLOCK_END([VV_ptr_A3]) = BLOCK_END([__cil_tmp7_main]));(UNCHECKED([VV_ptr_A3]) = UNCHECKED([__cil_tmp7_main]))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = (0 * 4))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A3 : ptr(A3) | [(VV_ptr_A3 = __cil_tmp3_main)]} 
 rhs {VV_ptr_A3 : ptr(A3) | [|| [(UNCHECKED([VV_ptr_A3]) = 1);&& [(VV_ptr_A3 != 0) ; (BLOCK_BEGIN([VV_ptr_A3]) <= VV_ptr_A3) ; ((VV_ptr_A3 + 0) < BLOCK_END([VV_ptr_A3]))]]]} 
 id 1 tag [2;1;-4;0] //main 
 
constraint:
 env  [x_main__SSA__blk_0_1:{VV_int : int | [(VV_int = __cil_tmp6_main)]};
       x_main:{VV_int : int | []};
       p:{VV_ptr_A3 : ptr(A3) | []};
       a:{VV_ptr_A4 : ptr(A4) | []};
       __cil_tmp7_main:{VV_ptr_A3 : ptr(A3) | []};
       __cil_tmp6_main:{VV_int : int | [k_15]};
       __cil_tmp5_main:{VV_int : int | [(VV_int = (__cil_tmp4_main : int))]};
       __cil_tmp4_main:{VV_int : int | [(VV_int = ((x_main__SSA__blk_0_1 <= 1000) ? 1 : 0))]};
       __cil_tmp3_main:{VV_ptr_A3 : ptr(A3) | [&& [(VV_ptr_A3 = (__cil_tmp7_main + __cil_tmp2_main)) ; (__cil_tmp7_main <= VV_ptr_A3)];(BLOCK_BEGIN([VV_ptr_A3]) = BLOCK_BEGIN([__cil_tmp7_main]));(BLOCK_END([VV_ptr_A3]) = BLOCK_END([__cil_tmp7_main]));(UNCHECKED([VV_ptr_A3]) = UNCHECKED([__cil_tmp7_main]))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = (0 * 4))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp5_main)]} 
 rhs {VV_int : int | [(VV_int != 0)]} 
 id 2 tag [2;1;-10;0] //main 
 
constraint:
 env  [p:{VV_ptr_A3 : ptr(A3) | []};
       a:{VV_ptr_A4 : ptr(A4) | []};
       __cil_tmp3_f:{VV_ptr_A3 : ptr(A3) | []};
       __cil_tmp2_f:{VV_ptr_A3 : ptr(A3) | [&& [(VV_ptr_A3 = (__cil_tmp3_f + __cil_tmp1_f)) ; (__cil_tmp3_f <= VV_ptr_A3)];(BLOCK_BEGIN([VV_ptr_A3]) = BLOCK_BEGIN([__cil_tmp3_f]));(BLOCK_END([VV_ptr_A3]) = BLOCK_END([__cil_tmp3_f]));(UNCHECKED([VV_ptr_A3]) = UNCHECKED([__cil_tmp3_f]))]};
       __cil_tmp1_f:{VV_int : int | [(VV_int = (0 * 4))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 1000)]} 
 rhs {VV_int : int | [k_15]} 
 id 4 tag [0;1;-4;1] //f 
 
constraint:
 env  [p:{VV_ptr_A3 : ptr(A3) | []};
       a:{VV_ptr_A4 : ptr(A4) | []};
       __cil_tmp3_f:{VV_ptr_A3 : ptr(A3) | [k_10]};
       __cil_tmp2_f:{VV_ptr_A3 : ptr(A3) | [&& [(VV_ptr_A3 = (__cil_tmp3_f + __cil_tmp1_f)) ; (__cil_tmp3_f <= VV_ptr_A3)];(BLOCK_BEGIN([VV_ptr_A3]) = BLOCK_BEGIN([__cil_tmp3_f]));(BLOCK_END([VV_ptr_A3]) = BLOCK_END([__cil_tmp3_f]));(UNCHECKED([VV_ptr_A3]) = UNCHECKED([__cil_tmp3_f]))]};
       __cil_tmp1_f:{VV_int : int | [(VV_int = (0 * 4))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A3 : ptr(A3) | [(VV_ptr_A3 = __cil_tmp2_f)]} 
 rhs {VV_ptr_A3 : ptr(A3) | [|| [(UNCHECKED([VV_ptr_A3]) = 1);&& [(VV_ptr_A3 != 0) ; (BLOCK_BEGIN([VV_ptr_A3]) <= VV_ptr_A3) ; ((VV_ptr_A3 + 0) < BLOCK_END([VV_ptr_A3]))]]]} 
 id 5 tag [0;1;-4;1] //f 
 
constraint:
 env  [p:{VV_ptr_A3 : ptr(A3) | []};
       a:{VV_ptr_A4 : ptr(A4) | []};
       __cil_tmp3_f:{VV_ptr_A3 : ptr(A3) | []};
       __cil_tmp2_f:{VV_ptr_A3 : ptr(A3) | [&& [(VV_ptr_A3 = (__cil_tmp3_f + __cil_tmp1_f)) ; (__cil_tmp3_f <= VV_ptr_A3)];(BLOCK_BEGIN([VV_ptr_A3]) = BLOCK_BEGIN([__cil_tmp3_f]));(BLOCK_END([VV_ptr_A3]) = BLOCK_END([__cil_tmp3_f]));(UNCHECKED([VV_ptr_A3]) = UNCHECKED([__cil_tmp3_f]))]};
       __cil_tmp1_f:{VV_int : int | [(VV_int = (0 * 4))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       C13#Ix#0#c0#m4#8:{VV_int : int | [k_15]};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = C13#Ix#0#c0#m4#8)]} 
 rhs {VV_int : int | [k_15[A3#Ix#0#c0#m4#8:=C13#Ix#0#c0#m4#8]]} 
 id 6 tag [0;1;0;1] //f 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 2)]} 
 rhs {VV_int : int | [k_15]} 
 id 7 tag [-2;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 0)]} 
 rhs {VV_int : int | [k_15]} 
 id 8 tag [-2;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 1)]} 
 rhs {VV_int : int | [k_15]} 
 id 9 tag [-2;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A3 : ptr(A3) | [&& [(VV_ptr_A3 > 0) ; (BLOCK_BEGIN([VV_ptr_A3]) = VV_ptr_A3) ; (BLOCK_END([VV_ptr_A3]) = (VV_ptr_A3 + 12))]]} 
 rhs {VV_ptr_A3 : ptr(A3) | [k_10]} 
 id 10 tag [-2;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       C14#Ix#0#c0#m4#8:{VV_int : int | [k_15]};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = C14#Ix#0#c0#m4#8)]} 
 rhs {VV_int : int | [k_15[A3#Ix#0#c0#m4#8:=C14#Ix#0#c0#m4#8]]} 
 id 11 tag [-2;-1;-1;-1] //global 
 
 
wf: env [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_ptr_A3 : ptr(A3) | [k_10]} 
      
    

    wf: env [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_15]} 
      
     
//solution: k_15 := [(0 <= VV_int);(VV_int <= 1000)] 

//solution: k_14 := [(0 <= VV_int);(1 = 0);(VV_int < A4#Ix#0);(0 < VV_int);(VV_int <= A4#Ix#0);(VV_int = 0);(VV_int > A4#Ix#0);(VV_int <= 1000);(VV_int >= A4#Ix#0)] 

//solution: k_13 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0);(VV_int <= 1000)] 

//solution: k_12 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0);(VV_int <= 1000)] 

//solution: k_11 := [((VV_ptr_A4 != 0) => && [(0 < VV_ptr_A4) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; (VV_ptr_A4 < BLOCK_END([VV_ptr_A4]))]);((VV_ptr_A4 != 0) => ((BLOCK_END([VV_ptr_A4]) - VV_ptr_A4) >= 4));(VV_ptr_A4 < BLOCK_END([VV_ptr_A4]));(0 < VV_ptr_A4);((VV_ptr_A4 != 0) => (VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4])));(0 <= VV_ptr_A4);(VV_ptr_A4 = 0);(VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4]));(BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4);(UNCHECKED([VV_ptr_A4]) = 1)] 

//solution: k_10 := [(BLOCK_BEGIN([VV_ptr_A3]) <= VV_ptr_A3);(VV_ptr_A3 = BLOCK_BEGIN([VV_ptr_A3]));(0 <= VV_ptr_A3);((VV_ptr_A3 != 0) => (VV_ptr_A3 = BLOCK_BEGIN([VV_ptr_A3])));(0 < VV_ptr_A3);(VV_ptr_A3 < BLOCK_END([VV_ptr_A3]));((VV_ptr_A3 != 0) => ((BLOCK_END([VV_ptr_A3]) - VV_ptr_A3) >= 4));((VV_ptr_A3 != 0) => && [(0 < VV_ptr_A3) ; (BLOCK_BEGIN([VV_ptr_A3]) <= VV_ptr_A3) ; (VV_ptr_A3 < BLOCK_END([VV_ptr_A3]))])] 

solution: k_15 := [((VV_int <= 1000), LT1k);((0 <= VV_int), GEZ)] 

solution: k_14 := [((VV_int >= A4#Ix#0), GEQ[~A0:=A4#Ix#0]);((VV_int <= 1000), LT1k);((VV_int > A4#Ix#0), GT[~A0:=A4#Ix#0]);((VV_int = 0), EQZ);((VV_int <= A4#Ix#0), LEQ[~A0:=A4#Ix#0]);((0 < VV_int), GTZ);((VV_int < A4#Ix#0), LT[~A0:=A4#Ix#0]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_13 := [((VV_int <= 1000), LT1k);((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_12 := [((VV_int <= 1000), LT1k);((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_11 := [((UNCHECKED([VV_ptr_A4]) = 1), UCH[VV_ptr_0:=VV_ptr_A4]);((BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4), LB[VV_ptr_0:=VV_ptr_A4]);((VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4])), ISBS[VV_ptr_0:=VV_ptr_A4]);((VV_ptr_A4 = 0), EQZ0[VV_ptr_0:=VV_ptr_A4]);((0 <= VV_ptr_A4), GTZP0[VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => (VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A4]);((0 < VV_ptr_A4), GTZP[VV_ptr_0:=VV_ptr_A4]);((VV_ptr_A4 < BLOCK_END([VV_ptr_A4])), UB[VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => ((BLOCK_END([VV_ptr_A4]) - VV_ptr_A4) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => && [(0 < VV_ptr_A4) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; (VV_ptr_A4 < BLOCK_END([VV_ptr_A4]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A4])] 

solution: k_10 := [(((VV_ptr_A3 != 0) => && [(0 < VV_ptr_A3) ; (BLOCK_BEGIN([VV_ptr_A3]) <= VV_ptr_A3) ; (VV_ptr_A3 < BLOCK_END([VV_ptr_A3]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A3]);(((VV_ptr_A3 != 0) => ((BLOCK_END([VV_ptr_A3]) - VV_ptr_A3) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A3]);((VV_ptr_A3 < BLOCK_END([VV_ptr_A3])), UB[VV_ptr_0:=VV_ptr_A3]);((0 < VV_ptr_A3), GTZP[VV_ptr_0:=VV_ptr_A3]);(((VV_ptr_A3 != 0) => (VV_ptr_A3 = BLOCK_BEGIN([VV_ptr_A3]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A3]);((0 <= VV_ptr_A3), GTZP0[VV_ptr_0:=VV_ptr_A3]);((VV_ptr_A3 = BLOCK_BEGIN([VV_ptr_A3])), ISBS[VV_ptr_0:=VV_ptr_A3]);((BLOCK_BEGIN([VV_ptr_A3]) <= VV_ptr_A3), LB[VV_ptr_0:=VV_ptr_A3])] 

//QUALIFIERS 

qualif WORDSIZE(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => ((BLOCK_END([VV_ptr_0]) - VV_ptr_0) >= 4))
      
qualif UCH(VV_ptr_0:ptr(0)):(UNCHECKED([VV_ptr_0]) = 1)
      
qualif UB(VV_ptr_0:ptr(0)):(VV_ptr_0 < BLOCK_END([VV_ptr_0]))
      
qualif NULLorVALID(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => && [(0 < VV_ptr_0) ; (BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0) ; (VV_ptr_0 < BLOCK_END([VV_ptr_0]))])
      
qualif NULLorBEGIN(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => (VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0])))
      
qualif LT1k(VV_int:int):(VV_int <= 1000)
      
qualif LT(VV_int:int):(VV_int < ~A0)
      
qualif LEQ(VV_int:int):(VV_int <= ~A0)
      
qualif LB(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0)
      
qualif ISBS(VV_ptr_0:ptr(0)):(VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0]))
      
qualif GTZP0(VV_ptr_0:ptr(0)):(0 <= VV_ptr_0)
      
qualif GTZP(VV_ptr_0:ptr(0)):(0 < VV_ptr_0)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GT(VV_int:int):(VV_int > ~A0)
      
qualif GEZ(VV_int:int):(0 <= VV_int)
      
qualif GEQ(VV_int:int):(VV_int >= ~A0)
      
qualif FALSE(VV_int:int):(1 = 0)
      
qualif EQZ0(VV_ptr_0:ptr(0)):(VV_ptr_0 = 0)
      
qualif EQZ(VV_int:int):(VV_int = 0) 
 
