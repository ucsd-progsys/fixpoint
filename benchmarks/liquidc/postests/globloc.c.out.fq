del_dep: [2;1;-8;0] => * 
del_dep: [2;1;-4;0] => * 
constraint:
 env  [x_main:{VV_int : int | []};
       p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       __cil_tmp5_main:{VV_ptr_A4 : ptr(A4) | [k_6[VV_ptr_C11:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []};
       A4#Ix#0#c0#m4#8:{VV_int : int | [false]}] 
 grd true 
 lhs {VV_int : int | [(VV_int = A4#Ix#0#c0#m4#8)]} 
 rhs {VV_int : int | [k_12]} 
 id 1 tag [2;3;0;0] //main 
 
constraint:
 env  [x_main__SSA__blk_2_1:{VV_int : int | [(VV_int = __cil_tmp4_main)]};
       x_main:{VV_int : int | []};
       p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       __cil_tmp5_main:{VV_ptr_A4 : ptr(A4) | [k_6[VV_ptr_C11:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       __cil_tmp4_main:{VV_int : int | [k_12]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((x_main__SSA__blk_2_1 <= 1000) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp3_main)]} 
 rhs {VV_int : int | [(VV_int != 0)]} 
 id 4 tag [2;1;-7;0] //main 
 
constraint:
 env  [x_main:{VV_int : int | []};
       p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       __cil_tmp5_main:{VV_ptr_A4 : ptr(A4) | [k_6[VV_ptr_C11:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A4 : ptr(A4) | [(VV_ptr_A4 = __cil_tmp5_main)]} 
 rhs {VV_ptr_A4 : ptr(A4) | [|| [(UNCHECKED([VV_ptr_A4]) = 1);&& [(VV_ptr_A4 != 0) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; ((VV_ptr_A4 + 3) < BLOCK_END([VV_ptr_A4]))]]]} 
 id 5 tag [2;1;-1;0] //main 
 
constraint:
 env  [x_main__SSA__blk_2_1:{VV_int : int | [(VV_int = __cil_tmp4_main)]};
       x_main:{VV_int : int | []};
       p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       __cil_tmp5_main:{VV_ptr_A4 : ptr(A4) | [k_6[VV_ptr_C11:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       __cil_tmp4_main:{VV_int : int | [k_12]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (__cil_tmp2_main : int))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((x_main__SSA__blk_2_1 <= 1000) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 0)]} 
 rhs {VV_int : int | [k_8]} 
 id 6 tag [2;0;-1000;0] //main 
 
constraint:
 env  [p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       __cil_tmp1_f:{VV_ptr_A4 : ptr(A4) | [k_6[VV_ptr_C13:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []};
       A4#Ix#0#c0#m4#8:{VV_int : int | [false]}] 
 grd true 
 lhs {VV_int : int | [(VV_int = A4#Ix#0#c0#m4#8)]} 
 rhs {VV_int : int | [k_12]} 
 id 7 tag [0;3;0;1] //f 
 
constraint:
 env  [p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       __cil_tmp1_f:{VV_ptr_A4 : ptr(A4) | [k_6[VV_ptr_C13:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A4 : ptr(A4) | [(VV_ptr_A4 = __cil_tmp1_f)]} 
 rhs {VV_ptr_A4 : ptr(A4) | [|| [(UNCHECKED([VV_ptr_A4]) = 1);&& [(VV_ptr_A4 != 0) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; ((VV_ptr_A4 + 3) < BLOCK_END([VV_ptr_A4]))]]]} 
 id 10 tag [0;1;-1;1] //f 
 
constraint:
 env  [p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       __cil_tmp1_f:{VV_ptr_A4 : ptr(A4) | [k_6[VV_ptr_C13:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 1000)]} 
 rhs {VV_int : int | [k_12]} 
 id 11 tag [0;1;-1;1] //f 
 
constraint:
 env  [p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       __cil_tmp1_f:{VV_ptr_A4 : ptr(A4) | [k_6[VV_ptr_C13:=VV_ptr_A4][VV_ptr_A4:=VV_ptr_A4]]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       C13#Ix#0#c0#m4#8:{VV_int : int | [k_12]};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = C13#Ix#0#c0#m4#8)]} 
 rhs {VV_int : int | [k_12[A4#Ix#0#c0#m4#8:=C13#Ix#0#c0#m4#8]]} 
 id 12 tag [0;1;0;1] //f 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 2)]} 
 rhs {VV_int : int | [k_12]} 
 id 13 tag [-3;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 0)]} 
 rhs {VV_int : int | [k_12]} 
 id 14 tag [-3;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 1)]} 
 rhs {VV_int : int | [k_12]} 
 id 15 tag [-3;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A4 : ptr(A4) | [&& [(VV_ptr_A4 > 0) ; (BLOCK_BEGIN([VV_ptr_A4]) = VV_ptr_A4) ; (BLOCK_END([VV_ptr_A4]) = (VV_ptr_A4 + 12))]]} 
 rhs {VV_ptr_A4 : ptr(A4) | [k_6]} 
 id 16 tag [-3;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       C14#Ix#0#c0#m4#8:{VV_int : int | [k_12]};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = C14#Ix#0#c0#m4#8)]} 
 rhs {VV_int : int | [k_12[A4#Ix#0#c0#m4#8:=C14#Ix#0#c0#m4#8]]} 
 id 17 tag [-3;-1;-1;-1] //global 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A5 : ptr(A5) | [&& [(VV_ptr_A5 > 0) ; (BLOCK_BEGIN([VV_ptr_A5]) = VV_ptr_A5) ; (BLOCK_END([VV_ptr_A5]) = (VV_ptr_A5 + 4))]]} 
 rhs {VV_ptr_A5 : ptr(A5) | [k_7]} 
 id 18 tag [-5;-1;-1;-1] //global 
 
constraint:
 env  [p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [k_9]} 
 rhs {VV_int : int | [((VV_int != 0) => true)]} 
 id 20 tag [0;3;0;1] //f 
 
constraint:
 env  [p:{VV_ptr_A4 : ptr(A4) | [k_6]};
       a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [k_8]} 
 rhs {VV_int : int | [((VV_int != 0) => true)]} 
 id 21 tag [2;3;0;0] //main 
 
 
wf: env [p:{VV_ptr_A4 : ptr(A4) | [k_6]};
             a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_8]} 
      
    

    wf: env [p:{VV_ptr_A4 : ptr(A4) | [k_6]};
             a__lcc_heapify__:{VV_ptr_A5 : ptr(A5) | [k_7]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_9]} 
      
    

    wf: env [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_ptr_A5 : ptr(A5) | [k_7]} 
      
    

    wf: env [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_ptr_A4 : ptr(A4) | [k_6]} 
      
    

    wf: env [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_12]} 
      
     
//solution: k_9 := [] 

//solution: k_8 := [(VV_int <= 1000);(0 <= VV_int);(VV_int = 0)] 

//solution: k_7 := [(((VV_ptr_A5 - BLOCK_BEGIN([VV_ptr_A5])) mod 8) = 0);(BLOCK_BEGIN([VV_ptr_A5]) <= VV_ptr_A5);(VV_ptr_A5 = BLOCK_BEGIN([VV_ptr_A5]));(0 <= VV_ptr_A5);((VV_ptr_A5 != 0) => (VV_ptr_A5 = BLOCK_BEGIN([VV_ptr_A5])));(0 < VV_ptr_A5);(VV_ptr_A5 < BLOCK_END([VV_ptr_A5]));((VV_ptr_A5 != 0) => ((BLOCK_END([VV_ptr_A5]) - VV_ptr_A5) >= 4));((VV_ptr_A5 != 0) => && [(0 < VV_ptr_A5) ; (BLOCK_BEGIN([VV_ptr_A5]) <= VV_ptr_A5) ; (VV_ptr_A5 < BLOCK_END([VV_ptr_A5]))]);(((VV_ptr_A5 - BLOCK_BEGIN([VV_ptr_A5])) mod 4) = 0)] 

//solution: k_6 := [(((VV_ptr_A4 - BLOCK_BEGIN([VV_ptr_A4])) mod 8) = 0);(BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4);(VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4]));(0 <= VV_ptr_A4);((VV_ptr_A4 != 0) => (VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4])));(0 < VV_ptr_A4);(VV_ptr_A4 < BLOCK_END([VV_ptr_A4]));((VV_ptr_A4 != 0) => ((BLOCK_END([VV_ptr_A4]) - VV_ptr_A4) >= 4));((VV_ptr_A4 != 0) => && [(0 < VV_ptr_A4) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; (VV_ptr_A4 < BLOCK_END([VV_ptr_A4]))]);(((VV_ptr_A4 - BLOCK_BEGIN([VV_ptr_A4])) mod 4) = 0)] 

//solution: k_12 := [(0 <= VV_int);(VV_int <= 1000)] 

//solution: k_11 := [(((VV_ptr_A6 - BLOCK_BEGIN([VV_ptr_A6])) mod 4) = 0);((VV_ptr_A6 != 0) => && [(0 < VV_ptr_A6) ; (BLOCK_BEGIN([VV_ptr_A6]) <= VV_ptr_A6) ; (VV_ptr_A6 < BLOCK_END([VV_ptr_A6]))]);(BLOCK_END([VV_ptr_A6]) = BLOCK_END([A5#Ix#0]));((VV_ptr_A6 != 0) => ((BLOCK_END([VV_ptr_A6]) - VV_ptr_A6) >= 4));(VV_ptr_A6 < BLOCK_END([VV_ptr_A6]));(0 < VV_ptr_A6);(BLOCK_BEGIN([VV_ptr_A6]) = BLOCK_BEGIN([A5#Ix#0]));((VV_ptr_A6 != 0) => (VV_ptr_A6 = BLOCK_BEGIN([VV_ptr_A6])));(0 <= VV_ptr_A6);(VV_ptr_A6 = 0);(VV_ptr_A6 = BLOCK_BEGIN([VV_ptr_A6]));(BLOCK_BEGIN([VV_ptr_A6]) <= VV_ptr_A6);(UNCHECKED([VV_ptr_A6]) = 1);(((VV_ptr_A6 - BLOCK_BEGIN([VV_ptr_A6])) mod 8) = 0)] 

//solution: k_10 := [(0 <= VV_int);(1 = 0);(VV_int < A6#Ix#0);(0 < VV_int);(VV_int <= A6#Ix#0);(VV_int = 0);(VV_int > A6#Ix#0);(VV_int <= 1000);(VV_int >= A6#Ix#0)] 

solution: k_9 := [] 

solution: k_8 := [((VV_int = 0), EQZ);((0 <= VV_int), GEZ);((VV_int <= 1000), LT1k)] 

solution: k_7 := [((((VV_ptr_A5 - BLOCK_BEGIN([VV_ptr_A5])) mod 4) = 0), ARRAYMOD[VV_ptr_0:=VV_ptr_A5]);(((VV_ptr_A5 != 0) => && [(0 < VV_ptr_A5) ; (BLOCK_BEGIN([VV_ptr_A5]) <= VV_ptr_A5) ; (VV_ptr_A5 < BLOCK_END([VV_ptr_A5]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A5]);(((VV_ptr_A5 != 0) => ((BLOCK_END([VV_ptr_A5]) - VV_ptr_A5) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A5]);((VV_ptr_A5 < BLOCK_END([VV_ptr_A5])), UB[VV_ptr_0:=VV_ptr_A5]);((0 < VV_ptr_A5), GTZP[VV_ptr_0:=VV_ptr_A5]);(((VV_ptr_A5 != 0) => (VV_ptr_A5 = BLOCK_BEGIN([VV_ptr_A5]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A5]);((0 <= VV_ptr_A5), GTZP0[VV_ptr_0:=VV_ptr_A5]);((VV_ptr_A5 = BLOCK_BEGIN([VV_ptr_A5])), ISBS[VV_ptr_0:=VV_ptr_A5]);((BLOCK_BEGIN([VV_ptr_A5]) <= VV_ptr_A5), LB[VV_ptr_0:=VV_ptr_A5]);((((VV_ptr_A5 - BLOCK_BEGIN([VV_ptr_A5])) mod 8) = 0), ARRAYMOD0[VV_ptr_0:=VV_ptr_A5])] 

solution: k_6 := [((((VV_ptr_A4 - BLOCK_BEGIN([VV_ptr_A4])) mod 4) = 0), ARRAYMOD[VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => && [(0 < VV_ptr_A4) ; (BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4) ; (VV_ptr_A4 < BLOCK_END([VV_ptr_A4]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => ((BLOCK_END([VV_ptr_A4]) - VV_ptr_A4) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A4]);((VV_ptr_A4 < BLOCK_END([VV_ptr_A4])), UB[VV_ptr_0:=VV_ptr_A4]);((0 < VV_ptr_A4), GTZP[VV_ptr_0:=VV_ptr_A4]);(((VV_ptr_A4 != 0) => (VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A4]);((0 <= VV_ptr_A4), GTZP0[VV_ptr_0:=VV_ptr_A4]);((VV_ptr_A4 = BLOCK_BEGIN([VV_ptr_A4])), ISBS[VV_ptr_0:=VV_ptr_A4]);((BLOCK_BEGIN([VV_ptr_A4]) <= VV_ptr_A4), LB[VV_ptr_0:=VV_ptr_A4]);((((VV_ptr_A4 - BLOCK_BEGIN([VV_ptr_A4])) mod 8) = 0), ARRAYMOD0[VV_ptr_0:=VV_ptr_A4])] 

solution: k_12 := [((VV_int <= 1000), LT1k);((0 <= VV_int), GEZ)] 

solution: k_11 := [((((VV_ptr_A6 - BLOCK_BEGIN([VV_ptr_A6])) mod 8) = 0), ARRAYMOD0[VV_ptr_0:=VV_ptr_A6]);((UNCHECKED([VV_ptr_A6]) = 1), UCH[VV_ptr_0:=VV_ptr_A6]);((BLOCK_BEGIN([VV_ptr_A6]) <= VV_ptr_A6), LB[VV_ptr_0:=VV_ptr_A6]);((VV_ptr_A6 = BLOCK_BEGIN([VV_ptr_A6])), ISBS[VV_ptr_0:=VV_ptr_A6]);((VV_ptr_A6 = 0), EQZ0[VV_ptr_0:=VV_ptr_A6]);((0 <= VV_ptr_A6), GTZP0[VV_ptr_0:=VV_ptr_A6]);(((VV_ptr_A6 != 0) => (VV_ptr_A6 = BLOCK_BEGIN([VV_ptr_A6]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A6]);((BLOCK_BEGIN([VV_ptr_A6]) = BLOCK_BEGIN([A5#Ix#0])), BEGIN[~A0:=A5#Ix#0][VV_ptr_0:=VV_ptr_A6]);((0 < VV_ptr_A6), GTZP[VV_ptr_0:=VV_ptr_A6]);((VV_ptr_A6 < BLOCK_END([VV_ptr_A6])), UB[VV_ptr_0:=VV_ptr_A6]);(((VV_ptr_A6 != 0) => ((BLOCK_END([VV_ptr_A6]) - VV_ptr_A6) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A6]);((BLOCK_END([VV_ptr_A6]) = BLOCK_END([A5#Ix#0])), END[~A0:=A5#Ix#0][VV_ptr_0:=VV_ptr_A6]);(((VV_ptr_A6 != 0) => && [(0 < VV_ptr_A6) ; (BLOCK_BEGIN([VV_ptr_A6]) <= VV_ptr_A6) ; (VV_ptr_A6 < BLOCK_END([VV_ptr_A6]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A6]);((((VV_ptr_A6 - BLOCK_BEGIN([VV_ptr_A6])) mod 4) = 0), ARRAYMOD[VV_ptr_0:=VV_ptr_A6])] 

solution: k_10 := [((VV_int >= A6#Ix#0), GEQ[~A0:=A6#Ix#0]);((VV_int <= 1000), LT1k);((VV_int > A6#Ix#0), GT[~A0:=A6#Ix#0]);((VV_int = 0), EQZ);((VV_int <= A6#Ix#0), LEQ[~A0:=A6#Ix#0]);((0 < VV_int), GTZ);((VV_int < A6#Ix#0), LT[~A0:=A6#Ix#0]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

//QUALIFIERS 

qualif WORDSIZE(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => ((BLOCK_END([VV_ptr_0]) - VV_ptr_0) >= 4))
      
qualif UCH(VV_ptr_0:ptr(0)):(UNCHECKED([VV_ptr_0]) = 1)
      
qualif UB(VV_ptr_0:ptr(0)):(VV_ptr_0 < BLOCK_END([VV_ptr_0]))
      
qualif NULLorVALID(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => && [(0 < VV_ptr_0) ; (BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0) ; (VV_ptr_0 < BLOCK_END([VV_ptr_0]))])
      
qualif NULLorBEGIN(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => (VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0])))
      
qualif LT1k(VV_int:int):(VV_int <= 1000)
      
qualif LT(VV_int:int):(VV_int < ~A0)
      
qualif LEQ(VV_int:int):(VV_int <= ~A0)
      
qualif LB(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0)
      
qualif ISBS(VV_ptr_0:ptr(0)):(VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0]))
      
qualif GTZP0(VV_ptr_0:ptr(0)):(0 <= VV_ptr_0)
      
qualif GTZP(VV_ptr_0:ptr(0)):(0 < VV_ptr_0)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GT(VV_int:int):(VV_int > ~A0)
      
qualif GEZ(VV_int:int):(0 <= VV_int)
      
qualif GEQ(VV_int:int):(VV_int >= ~A0)
      
qualif FALSE(VV_int:int):(1 = 0)
      
qualif EQZ0(VV_ptr_0:ptr(0)):(VV_ptr_0 = 0)
      
qualif EQZ(VV_int:int):(VV_int = 0)
      
qualif END(VV_ptr_0:ptr(0)):(BLOCK_END([VV_ptr_0]) = BLOCK_END([~A0]))
      
qualif BEGIN(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) = BLOCK_BEGIN([~A0]))
      
qualif ARRAYMOD0(VV_ptr_0:ptr(0)):(((VV_ptr_0 - BLOCK_BEGIN([VV_ptr_0])) mod 8) = 0)
      
qualif ARRAYMOD(VV_ptr_0:ptr(0)):(((VV_ptr_0 - BLOCK_BEGIN([VV_ptr_0])) mod 4) = 0)
      
 
