constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]} 
 rhs {VV_int : int | [k_1]} 
 id 1 tag [0;11;-1;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | []};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]} 
 rhs {VV_int : int | [k_2]} 
 id 2 tag [0;11;-2;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 0)]} 
 rhs {VV_int : int | [k_3]} 
 id 3 tag [0;10;-1;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__phi_4:{VV_int : int | [k_0]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = ((i_main__SSA__phi_4 < 256) ? 1 : 0))]} 
 rhs {VV_int : int | [k_4]} 
 id 4 tag [0;5;-1;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__phi_4:{VV_int : int | [k_0]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((i_main__SSA__phi_4 < 256) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (__cil_tmp2_main != 0) 
 lhs {VV_int : int | [(VV_int = (i_main__SSA__phi_4 * 4))]} 
 rhs {VV_int : int | [k_5]} 
 id 5 tag [0;3;-1;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__phi_4:{VV_int : int | [k_0]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 * 4))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((i_main__SSA__phi_4 < 256) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (__cil_tmp2_main != 0) 
 lhs {VV_int : int | [&& [(VV_int = (__cil_tmp8_main + __cil_tmp3_main)) ; (__cil_tmp8_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp8_main]))]} 
 rhs {VV_int : int | [k_6]} 
 id 6 tag [0;3;-2;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__phi_4:{VV_int : int | [k_0]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp8_main + __cil_tmp3_main)) ; (__cil_tmp8_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp8_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 * 4))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((i_main__SSA__phi_4 < 256) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (__cil_tmp2_main != 0) 
 lhs {VV_int : int | [(VV_int = (i_main__SSA__phi_4 + 1))]} 
 rhs {VV_int : int | [k_7]} 
 id 7 tag [0;3;-4;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__phi_4:{VV_int : int | [k_0]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 + 1))]};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp8_main + __cil_tmp3_main)) ; (__cil_tmp8_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp8_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 * 4))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((i_main__SSA__phi_4 < 256) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (__cil_tmp2_main != 0) 
 lhs {VV_int : int | [(VV_int = (__cil_tmp5_main * 4))]} 
 rhs {VV_int : int | [k_8]} 
 id 8 tag [0;3;-5;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__phi_4:{VV_int : int | [k_0]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main * 4))]};
       __cil_tmp5_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 + 1))]};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp8_main + __cil_tmp3_main)) ; (__cil_tmp8_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp8_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 * 4))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((i_main__SSA__phi_4 < 256) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (__cil_tmp2_main != 0) 
 lhs {VV_int : int | [&& [(VV_int = (__cil_tmp9_main + __cil_tmp6_main)) ; (__cil_tmp9_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp9_main]))]} 
 rhs {VV_int : int | [k_9]} 
 id 9 tag [0;3;-6;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__phi_4:{VV_int : int | [k_0]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | [&& [(VV_int = (__cil_tmp9_main + __cil_tmp6_main)) ; (__cil_tmp9_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp9_main]))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main * 4))]};
       __cil_tmp5_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 + 1))]};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp8_main + __cil_tmp3_main)) ; (__cil_tmp8_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp8_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 * 4))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((i_main__SSA__phi_4 < 256) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (__cil_tmp2_main != 0) 
 lhs {VV_int : int | [(VV_int = (i_main__SSA__phi_4 + 1))]} 
 rhs {VV_int : int | [k_10]} 
 id 10 tag [0;3;-8;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | []};
       __cil_tmp6_main:{VV_int : int | []};
       __cil_tmp5_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | []};
       __cil_tmp3_main:{VV_int : int | []};
       __cil_tmp2_main:{VV_int : int | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = i_main__SSA__blk_1_1)]} 
 rhs {VV_int : int | [k_0[i_main__SSA__phi_4:=i_main__SSA__blk_1_1]]} 
 id 11 tag [0;8;0;0] //main 
 
constraint:
 env  [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       i_main__SSA__phi_4:{VV_int : int | [k_0]};
       i_main__SSA__blk_9_1:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 + 1))]};
       i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
       i_main:{VV_int : int | []};
       char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp9_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
       __cil_tmp7_main:{VV_int : int | [&& [(VV_int = (__cil_tmp9_main + __cil_tmp6_main)) ; (__cil_tmp9_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp9_main]))]};
       __cil_tmp6_main:{VV_int : int | [(VV_int = (__cil_tmp5_main * 4))]};
       __cil_tmp5_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 + 1))]};
       __cil_tmp4_main:{VV_int : int | [&& [(VV_int = (__cil_tmp8_main + __cil_tmp3_main)) ; (__cil_tmp8_main <= VV_int)];(BLOCK_BEGIN([VV_int]) = BLOCK_BEGIN([__cil_tmp8_main]))]};
       __cil_tmp3_main:{VV_int : int | [(VV_int = (i_main__SSA__phi_4 * 4))]};
       __cil_tmp2_main:{VV_int : int | [(VV_int = ((i_main__SSA__phi_4 < 256) ? 1 : 0))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (__cil_tmp2_main != 0) 
 lhs {VV_int : int | [(VV_int = i_main__SSA__blk_9_1)]} 
 rhs {VV_int : int | [k_0[i_main__SSA__phi_4:=i_main__SSA__blk_9_1]]} 
 id 12 tag [0;3;0;0] //main 
 
 
wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main__SSA__phi_4:{VV_int : int | [k_0]};
             i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_10]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main__SSA__phi_4:{VV_int : int | [k_0]};
             i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_9]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main__SSA__phi_4:{VV_int : int | [k_0]};
             i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_8]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main__SSA__phi_4:{VV_int : int | [k_0]};
             i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_7]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main__SSA__phi_4:{VV_int : int | [k_0]};
             i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_6]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main__SSA__phi_4:{VV_int : int | [k_0]};
             i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_5]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main__SSA__phi_4:{VV_int : int | [k_0]};
             i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_4]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main__SSA__phi_4:{VV_int : int | [k_0]};
             i_main__SSA__blk_1_1:{VV_int : int | [(VV_int = 0)]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_0]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_3]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_2]} 
      
    

    wf: env [index_to_char:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             i_main:{VV_int : int | []};
             char_to_index:{VV_int : int | [(VV_int = (BLOCK_BEGIN([VV_int]) + 0))]};
             UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_1]} 
      
     
//solution: k_9 := [(((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0);(VV_int <= (BLOCK_BEGIN([VV_int]) + 1024));(0 != VV_int);(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= (BLOCK_BEGIN([VV_int]) + 1))] 

//solution: k_8 := [(0 != VV_int);(VV_int >= 0);(0 < VV_int);(0 <= VV_int);(VV_int >= 1);(((VV_int - 0) mod 4) = 0)] 

//solution: k_7 := [(VV_int < 1024);(0 != VV_int);(VV_int >= 0);(0 < VV_int);(VV_int < 1020);(0 <= VV_int);(VV_int >= 1)] 

//solution: k_6 := [(((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0);(VV_int <= (BLOCK_BEGIN([VV_int]) + 1024));(VV_int <= (BLOCK_BEGIN([VV_int]) + 1020));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int < (BLOCK_BEGIN([VV_int]) + 1024))] 

//solution: k_5 := [(VV_int < 1024);(VV_int >= 0);(0 <= VV_int);(((VV_int - 0) mod 4) = 0)] 

//solution: k_4 := [(VV_int < 1024);(VV_int >= 0);(VV_int < 1020);(0 <= VV_int)] 

//solution: k_3 := [(((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0);(VV_int < (BLOCK_BEGIN([VV_int]) + 1020));(VV_int < 1024);(VV_int <= (BLOCK_BEGIN([VV_int]) + 1024));(VV_int <= (BLOCK_BEGIN([VV_int]) + 1020));(0 = VV_int);(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int = (BLOCK_BEGIN([VV_int]) + 0));(VV_int >= 0);(VV_int < 1020);(0 <= VV_int);(((VV_int - 0) mod 4) = 0);(VV_int < (BLOCK_BEGIN([VV_int]) + 1024));(VV_int = 0)] 

//solution: k_2 := [(((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0);(VV_int < (BLOCK_BEGIN([VV_int]) + 1020));(VV_int <= (BLOCK_BEGIN([VV_int]) + 1024));(VV_int <= (BLOCK_BEGIN([VV_int]) + 1020));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int < (BLOCK_BEGIN([VV_int]) + 1024));(VV_int = (BLOCK_BEGIN([VV_int]) + 0))] 

//solution: k_10 := [(VV_int < 1024);(0 != VV_int);(VV_int >= 0);(0 < VV_int);(VV_int < 1020);(0 <= VV_int);(VV_int >= 1)] 

//solution: k_1 := [(((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0);(VV_int < (BLOCK_BEGIN([VV_int]) + 1020));(VV_int <= (BLOCK_BEGIN([VV_int]) + 1024));(VV_int <= (BLOCK_BEGIN([VV_int]) + 1020));(VV_int >= (BLOCK_BEGIN([VV_int]) + 0));(VV_int < (BLOCK_BEGIN([VV_int]) + 1024));(VV_int = (BLOCK_BEGIN([VV_int]) + 0))] 

//solution: k_0 := [(VV_int < 1024);(VV_int >= 0);(VV_int < 1020);(0 <= VV_int)] 

solution: k_9 := [((VV_int >= (BLOCK_BEGIN([VV_int]) + 1)), SCALAR3);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR10);((0 != VV_int), NEZ0);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR13);((((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0), SCALAR16)] 

solution: k_8 := [((((VV_int - 0) mod 4) = 0), SCALAR1);((VV_int >= 1), SCALAR4);((0 <= VV_int), GEZ);((0 < VV_int), GTZ);((VV_int >= 0), SCALAR8);((0 != VV_int), NEZ0)] 

solution: k_7 := [((VV_int >= 1), SCALAR4);((0 <= VV_int), GEZ);((VV_int < 1020), SCALAR6);((0 < VV_int), GTZ);((VV_int >= 0), SCALAR8);((0 != VV_int), NEZ0);((VV_int < 1024), SCALAR14)] 

solution: k_6 := [((VV_int < (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR10);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1020)), SCALAR12);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR13);((((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0), SCALAR16)] 

solution: k_5 := [((((VV_int - 0) mod 4) = 0), SCALAR1);((0 <= VV_int), GEZ);((VV_int >= 0), SCALAR8);((VV_int < 1024), SCALAR14)] 

solution: k_4 := [((0 <= VV_int), GEZ);((VV_int < 1020), SCALAR6);((VV_int >= 0), SCALAR8);((VV_int < 1024), SCALAR14)] 

solution: k_3 := [((VV_int = 0), SCALAR11);((VV_int < (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR);((((VV_int - 0) mod 4) = 0), SCALAR1);((0 <= VV_int), GEZ);((VV_int < 1020), SCALAR6);((VV_int >= 0), SCALAR8);((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR9);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR10);((0 = VV_int), EQZ);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1020)), SCALAR12);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR13);((VV_int < 1024), SCALAR14);((VV_int < (BLOCK_BEGIN([VV_int]) + 1020)), SCALAR15);((((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0), SCALAR16)] 

solution: k_2 := [((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR9);((VV_int < (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR10);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1020)), SCALAR12);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR13);((VV_int < (BLOCK_BEGIN([VV_int]) + 1020)), SCALAR15);((((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0), SCALAR16)] 

solution: k_10 := [((VV_int >= 1), SCALAR4);((0 <= VV_int), GEZ);((VV_int < 1020), SCALAR6);((0 < VV_int), GTZ);((VV_int >= 0), SCALAR8);((0 != VV_int), NEZ0);((VV_int < 1024), SCALAR14)] 

solution: k_1 := [((VV_int = (BLOCK_BEGIN([VV_int]) + 0)), SCALAR9);((VV_int < (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR);((VV_int >= (BLOCK_BEGIN([VV_int]) + 0)), SCALAR10);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1020)), SCALAR12);((VV_int <= (BLOCK_BEGIN([VV_int]) + 1024)), SCALAR13);((VV_int < (BLOCK_BEGIN([VV_int]) + 1020)), SCALAR15);((((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0), SCALAR16)] 

solution: k_0 := [((0 <= VV_int), GEZ);((VV_int < 1020), SCALAR6);((VV_int >= 0), SCALAR8);((VV_int < 1024), SCALAR14)] 

//QUALIFIERS 

qualif SCALAR9(VV_int:int):(VV_int = (BLOCK_BEGIN([VV_int]) + 0))
      
qualif SCALAR8(VV_int:int):(VV_int >= 0)
      
qualif SCALAR7(VV_int:int):(VV_int = 1)
      
qualif SCALAR6(VV_int:int):(VV_int < 1020)
      
qualif SCALAR5(VV_int:int):(((VV_int - 1) mod 4) = 0)
      
qualif SCALAR4(VV_int:int):(VV_int >= 1)
      
qualif SCALAR3(VV_int:int):(VV_int >= (BLOCK_BEGIN([VV_int]) + 1))
      
qualif SCALAR2(VV_int:int):(VV_int = (BLOCK_BEGIN([VV_int]) + 1))
      
qualif SCALAR16(VV_int:int):(((VV_int - (BLOCK_BEGIN([VV_int]) + 0)) mod 4) = 0)
      
qualif SCALAR15(VV_int:int):(VV_int < (BLOCK_BEGIN([VV_int]) + 1020))
      
qualif SCALAR14(VV_int:int):(VV_int < 1024)
      
qualif SCALAR13(VV_int:int):(VV_int <= (BLOCK_BEGIN([VV_int]) + 1024))
      
qualif SCALAR12(VV_int:int):(VV_int <= (BLOCK_BEGIN([VV_int]) + 1020))
      
qualif SCALAR11(VV_int:int):(VV_int = 0)
      
qualif SCALAR10(VV_int:int):(VV_int >= (BLOCK_BEGIN([VV_int]) + 0))
      
qualif SCALAR1(VV_int:int):(((VV_int - 0) mod 4) = 0)
      
qualif SCALAR0(VV_int:int):(((VV_int - (BLOCK_BEGIN([VV_int]) + 1)) mod 4) = 0)
      
qualif SCALAR(VV_int:int):(VV_int < (BLOCK_BEGIN([VV_int]) + 1024))
      
qualif NEZ0(VV_int:int):(0 != VV_int) 
qualif NEZ(VV_int:int):(0 = 1)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GEZ(VV_int:int):(0 <= VV_int)
      
qualif EQZ(VV_int:int):(0 = VV_int) 
 
