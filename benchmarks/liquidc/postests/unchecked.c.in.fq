del_dep: [1;1;-3;0] => * 
del_dep: [1;1;-9;0] => * 
constraint:
 env  [z_main:{VV_ptr_A21 : ptr(A21) | []};
       y_main:{VV_ptr_A22 : ptr(A22) | []};
       x_main:{VV_ptr_A23 : ptr(A23) | []};
       tmp_main:{VV_ptr_A20 : ptr(A20) | []};
       tmp___0_main:{VV_ptr_A19 : ptr(A19) | []};
       mem_6_main:{VV_ptr_A18 : ptr(A18) | []};
       __cil_tmp9_main:{VV_ptr_A16 : ptr(A16) | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | [&& [(VV_int = (10 : int)) ; (0 <= VV_int)]]};
       __cil_tmp10_main:{VV_ptr_A16 : ptr(A16) | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp7_main)]} 
 rhs {VV_int : int | [(VV_int >= 0)]} 
 id 2 tag [1;1;-2;0] //main 
 
constraint:
 env  [z_main:{VV_ptr_A21 : ptr(A21) | []};
       y_main:{VV_ptr_A22 : ptr(A22) | []};
       x_main__SSA__blk_0_1:{VV_ptr_A18 : ptr(A18) | [(VV_ptr_A18 = tmp_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A18]) = BLOCK_BEGIN([tmp_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A18]) = BLOCK_END([tmp_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A18]) = 1)]};
       x_main:{VV_ptr_A23 : ptr(A23) | []};
       tmp_main__SSA__blk_0_1:{VV_ptr_A18 : ptr(A18) | [&& [((VV_ptr_A18 + __cil_tmp7_main) = BLOCK_END([VV_ptr_A18])) ; (VV_ptr_A18 > 0) ; (VV_ptr_A18 = BLOCK_BEGIN([VV_ptr_A18]))]]};
       tmp_main:{VV_ptr_A20 : ptr(A20) | []};
       tmp___0_main:{VV_ptr_A19 : ptr(A19) | []};
       mem_6_main:{VV_ptr_A18 : ptr(A18) | [&& [(VV_ptr_A18 = (x_main__SSA__blk_0_1 + 40)) ; (x_main__SSA__blk_0_1 <= VV_ptr_A18)];(BLOCK_BEGIN([VV_ptr_A18]) = BLOCK_BEGIN([x_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A18]) = BLOCK_END([x_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A18]) = 1)]};
       __cil_tmp9_main:{VV_ptr_A16 : ptr(A16) | []};
       __cil_tmp8_main:{VV_int : int | []};
       __cil_tmp7_main:{VV_int : int | [&& [(VV_int = (10 : int)) ; (0 <= VV_int)]]};
       __cil_tmp10_main:{VV_ptr_A16 : ptr(A16) | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A18 : ptr(A18) | [(VV_ptr_A18 = mem_6_main)]} 
 rhs {VV_ptr_A18 : ptr(A18) | [|| [(UNCHECKED([VV_ptr_A18]) = 1);&& [(VV_ptr_A18 != 0) ; (BLOCK_BEGIN([VV_ptr_A18]) <= VV_ptr_A18) ; ((VV_ptr_A18 + 3) < BLOCK_END([VV_ptr_A18]))]]]} 
 id 4 tag [1;1;-6;0] //main 
 
constraint:
 env  [z_main:{VV_ptr_A21 : ptr(A21) | []};
       y_main:{VV_ptr_A22 : ptr(A22) | []};
       x_main__SSA__blk_0_1:{VV_ptr_A18 : ptr(A18) | [(VV_ptr_A18 = tmp_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A18]) = BLOCK_BEGIN([tmp_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A18]) = BLOCK_END([tmp_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A18]) = 1)]};
       x_main:{VV_ptr_A23 : ptr(A23) | []};
       tmp_main__SSA__blk_0_1:{VV_ptr_A18 : ptr(A18) | [&& [((VV_ptr_A18 + __cil_tmp7_main) = BLOCK_END([VV_ptr_A18])) ; (VV_ptr_A18 > 0) ; (VV_ptr_A18 = BLOCK_BEGIN([VV_ptr_A18]))]]};
       tmp_main:{VV_ptr_A20 : ptr(A20) | []};
       tmp___0_main:{VV_ptr_A19 : ptr(A19) | []};
       mem_6_main:{VV_ptr_A18 : ptr(A18) | [&& [(VV_ptr_A18 = (x_main__SSA__blk_0_1 + 40)) ; (x_main__SSA__blk_0_1 <= VV_ptr_A18)];(BLOCK_BEGIN([VV_ptr_A18]) = BLOCK_BEGIN([x_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A18]) = BLOCK_END([x_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A18]) = 1)]};
       __cil_tmp9_main:{VV_ptr_A16 : ptr(A16) | []};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (4 : int))]};
       __cil_tmp7_main:{VV_int : int | [&& [(VV_int = (10 : int)) ; (0 <= VV_int)]]};
       __cil_tmp10_main:{VV_ptr_A16 : ptr(A16) | []};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp8_main)]} 
 rhs {VV_int : int | [(VV_int >= 0)]} 
 id 5 tag [1;1;-8;0] //main 
 
constraint:
 env  [z_main__SSA__blk_0_1:{VV_ptr_A16 : ptr(A16) | [(VV_ptr_A16 = y_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A16]) = BLOCK_BEGIN([y_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A16]) = BLOCK_END([y_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A16]) = 1)]};
       z_main:{VV_ptr_A21 : ptr(A21) | []};
       y_main__SSA__blk_0_1:{VV_ptr_A16 : ptr(A16) | [(VV_ptr_A16 = tmp___0_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A16]) = BLOCK_BEGIN([tmp___0_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A16]) = BLOCK_END([tmp___0_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A16]) = UNCHECKED([tmp___0_main__SSA__blk_0_1]))]};
       y_main:{VV_ptr_A22 : ptr(A22) | []};
       x_main__SSA__blk_0_1:{VV_ptr_A18 : ptr(A18) | [(VV_ptr_A18 = tmp_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A18]) = BLOCK_BEGIN([tmp_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A18]) = BLOCK_END([tmp_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A18]) = 1)]};
       x_main:{VV_ptr_A23 : ptr(A23) | []};
       tmp_main__SSA__blk_0_1:{VV_ptr_A18 : ptr(A18) | [&& [((VV_ptr_A18 + __cil_tmp7_main) = BLOCK_END([VV_ptr_A18])) ; (VV_ptr_A18 > 0) ; (VV_ptr_A18 = BLOCK_BEGIN([VV_ptr_A18]))]]};
       tmp_main:{VV_ptr_A20 : ptr(A20) | []};
       tmp___0_main__SSA__blk_0_1:{VV_ptr_A16 : ptr(A16) | [&& [((VV_ptr_A16 + __cil_tmp8_main) = BLOCK_END([VV_ptr_A16])) ; (VV_ptr_A16 > 0) ; (VV_ptr_A16 = BLOCK_BEGIN([VV_ptr_A16]))]]};
       tmp___0_main:{VV_ptr_A19 : ptr(A19) | []};
       mem_6_main:{VV_ptr_A18 : ptr(A18) | [&& [(VV_ptr_A18 = (x_main__SSA__blk_0_1 + 40)) ; (x_main__SSA__blk_0_1 <= VV_ptr_A18)];(BLOCK_BEGIN([VV_ptr_A18]) = BLOCK_BEGIN([x_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A18]) = BLOCK_END([x_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A18]) = 1)]};
       lqn#0:{VV_int : int | [(VV_int = 0)]};
       __cil_tmp9_main:{VV_ptr_A16 : ptr(A16) | [(VV_ptr_A16 = z_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A16]) = BLOCK_BEGIN([z_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A16]) = BLOCK_END([z_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A16]) = UNCHECKED([z_main__SSA__blk_0_1]))]};
       __cil_tmp8_main:{VV_int : int | [(VV_int = (4 : int))]};
       __cil_tmp7_main:{VV_int : int | [&& [(VV_int = (10 : int)) ; (0 <= VV_int)]]};
       __cil_tmp10_main:{VV_ptr_A16 : ptr(A16) | [&& [(VV_ptr_A16 = (__cil_tmp9_main + 4)) ; (__cil_tmp9_main <= VV_ptr_A16)];(BLOCK_BEGIN([VV_ptr_A16]) = BLOCK_BEGIN([__cil_tmp9_main]));(BLOCK_END([VV_ptr_A16]) = BLOCK_END([__cil_tmp9_main]));(UNCHECKED([VV_ptr_A16]) = UNCHECKED([__cil_tmp9_main]))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_ptr_A16 : ptr(A16) | [(VV_ptr_A16 = __cil_tmp10_main)]} 
 rhs {VV_ptr_A16 : ptr(A16) | [|| [(UNCHECKED([VV_ptr_A16]) = 1);&& [(VV_ptr_A16 != 0) ; (BLOCK_BEGIN([VV_ptr_A16]) <= VV_ptr_A16) ; ((VV_ptr_A16 + 0) < BLOCK_END([VV_ptr_A16]))]]]} 
 id 6 tag [1;1;-14;0] //main 
 
 
 
//solution: k_12 := [(0 <= VV_int);(1 = 0);(VV_int < A16#Ix#4);(0 < VV_int);(VV_int <= A16#Ix#4);(VV_int = 0);(VV_int > A16#Ix#4);(VV_int >= A16#Ix#4)] 

//solution: k_11 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0)] 

//solution: k_10 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0)] 

solution: k_12 := [((VV_int >= A16#Ix#4), GEQ[~A0:=A16#Ix#4]);((VV_int > A16#Ix#4), GT[~A0:=A16#Ix#4]);((VV_int = 0), EQZ);((VV_int <= A16#Ix#4), LEQ[~A0:=A16#Ix#4]);((0 < VV_int), GTZ);((VV_int < A16#Ix#4), LT[~A0:=A16#Ix#4]);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_11 := [((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

solution: k_10 := [((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

//QUALIFIERS 

qualif LT(VV_int:int):(VV_int < ~A0)
      
qualif LEQ(VV_int:int):(VV_int <= ~A0)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GT(VV_int:int):(VV_int > ~A0)
      
qualif GEZ(VV_int:int):(0 <= VV_int)
      
qualif GEQ(VV_int:int):(VV_int >= ~A0)
      
qualif FALSE(VV_int:int):(1 = 0) 
qualif EQZ(VV_int:int):(VV_int = 0)
      
 
