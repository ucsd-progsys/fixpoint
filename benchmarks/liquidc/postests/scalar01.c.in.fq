del_dep: [1;1;-3;0] => * 
constraint:
 env  [tmp_main__SSA__blk_0_1:{VV_ptr_A10 : ptr(A10) | [(VV_ptr_A10 = tmp___0_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A10]) = BLOCK_BEGIN([tmp___0_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A10]) = BLOCK_END([tmp___0_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A10]) = UNCHECKED([tmp___0_main__SSA__blk_0_1]))]};
       tmp_main:{VV_ptr_A12 : ptr(A12) | []};
       tmp___0_main__SSA__blk_0_1:{VV_ptr_A10 : ptr(A10) | [&& [(VV_ptr_A10 = BLOCK_BEGIN([VV_ptr_A10])) ; (VV_ptr_A10 > 0) ; ((VV_ptr_A10 + __cil_tmp4_main) = BLOCK_END([VV_ptr_A10]))]]};
       tmp___0_main:{VV_ptr_A11 : ptr(A11) | []};
       root_main__SSA__blk_0_1:{VV_ptr_A15 : ptr(A15) | [(VV_ptr_A15 = 0)]};
       root_main:{VV_ptr_A13 : ptr(A13) | []};
       __cil_tmp4_main:{VV_int : int | [(VV_int = (8 : int))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | []} 
 rhs {VV_int : int | [(0 <= 2)]} 
 id 1 tag [1;1;-6;0] //main 
 
constraint:
 env  [tmp_main:{VV_ptr_A12 : ptr(A12) | []};
       tmp___0_main:{VV_ptr_A11 : ptr(A11) | []};
       root_main:{VV_ptr_A13 : ptr(A13) | []};
       __cil_tmp4_main:{VV_int : int | [(VV_int = (8 : int))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = __cil_tmp4_main)]} 
 rhs {VV_int : int | [(VV_int >= 0)]} 
 id 2 tag [1;1;-2;0] //main 
 
constraint:
 env  [tmp_main__SSA__blk_0_1:{VV_ptr_A10 : ptr(A10) | [(VV_ptr_A10 = tmp___0_main__SSA__blk_0_1);(BLOCK_BEGIN([VV_ptr_A10]) = BLOCK_BEGIN([tmp___0_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A10]) = BLOCK_END([tmp___0_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A10]) = UNCHECKED([tmp___0_main__SSA__blk_0_1]))]};
       tmp_main:{VV_ptr_A12 : ptr(A12) | []};
       tmp___0_main__SSA__blk_0_1:{VV_ptr_A10 : ptr(A10) | [&& [(VV_ptr_A10 = BLOCK_BEGIN([VV_ptr_A10])) ; (VV_ptr_A10 > 0) ; ((VV_ptr_A10 + __cil_tmp4_main) = BLOCK_END([VV_ptr_A10]))]]};
       tmp___0_main:{VV_ptr_A11 : ptr(A11) | []};
       root_main__SSA__blk_0_2:{VV_ptr_A15 : ptr(A15) | [&& [(VV_ptr_A15 = (root_main__SSA__blk_0_1 + 16)) ; (root_main__SSA__blk_0_1 <= VV_ptr_A15)];(BLOCK_BEGIN([VV_ptr_A15]) = BLOCK_BEGIN([root_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A15]) = BLOCK_END([root_main__SSA__blk_0_1]));(UNCHECKED([VV_ptr_A15]) = UNCHECKED([root_main__SSA__blk_0_1]))]};
       root_main__SSA__blk_0_1:{VV_ptr_A15 : ptr(A15) | [(VV_ptr_A15 = 0)]};
       root_main:{VV_ptr_A13 : ptr(A13) | []};
       __cil_tmp4_main:{VV_int : int | [(VV_int = (8 : int))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [(VV_int = 0)]} 
 rhs {VV_int : int | [k_5]} 
 id 3 tag [1;0;-1000;0] //main 
 
constraint:
 env  [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd true 
 lhs {VV_int : int | [k_5]} 
 rhs {VV_int : int | [((VV_int != 0) => true)]} 
 id 4 tag [1;1;0;0] //main 
 
 
wf: env [UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
             SKOLEM:{VV_func : func(0, [int ; int]) | []};
             DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
             BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
             BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
     reft {VV_int : int | [k_5]} 
      
     
//solution: k_5 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0)] 

solution: k_5 := [((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

//QUALIFIERS 

qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GEZ(VV_int:int):(0 <= VV_int) 
qualif FALSE(VV_int:int):(1 = 0)
      
qualif EQZ(VV_int:int):(VV_int = 0) 
 
