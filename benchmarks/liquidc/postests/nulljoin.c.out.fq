del_dep: [2;3;-3;0] => * 
del_dep: [2;1;-3;0] => * 
constraint:
 env  [x_main__SSA__blk_0_1:{VV_ptr_A9 : ptr(A9) | [(VV_ptr_A9 = 0)]};
       x_main:{VV_ptr_A13 : ptr(A13) | []};
       tmp_main:{VV_ptr_A9 : ptr(A9) | []};
       tmp___0_main__SSA__blk_0_1:{VV_int : int | [true]};
       tmp___0_main:{VV_int : int | []};
       __cil_tmp4_main:{VV_int : int | [(VV_int = (4 : int))]};
       UNCHECKED:{VV_func : func(1, [@(0) ; int]) | []};
       SKOLEM:{VV_func : func(0, [int ; int]) | []};
       DEREF:{VV_func : func(1, [@(0) ; @(1)]) | []};
       BLOCK_END:{VV_func : func(1, [@(0) ; @(0)]) | []};
       BLOCK_BEGIN:{VV_func : func(1, [@(0) ; @(0)]) | []}] 
 grd (tmp___0_main__SSA__blk_0_1 != 0) 
 lhs {VV_int : int | [(VV_int = __cil_tmp4_main)]} 
 rhs {VV_int : int | [(VV_int >= 0)]} 
 id 1 tag [2;1;-2;0] //main 
 
 
 
//solution: k_9 := [((VV_ptr_A9 != 0) => && [(0 < VV_ptr_A9) ; (BLOCK_BEGIN([VV_ptr_A9]) <= VV_ptr_A9) ; (VV_ptr_A9 < BLOCK_END([VV_ptr_A9]))]);(BLOCK_END([VV_ptr_A9]) = BLOCK_END([x_main__SSA__phi_3]));(BLOCK_END([VV_ptr_A9]) = BLOCK_END([x_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A9]) = BLOCK_END([tmp_main]));((VV_ptr_A9 != 0) => ((BLOCK_END([VV_ptr_A9]) - VV_ptr_A9) >= 4));((VV_ptr_A9 + (4 * tmp___0_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A9]));((VV_ptr_A9 + (4 * tmp___0_main)) <= BLOCK_END([VV_ptr_A9]));(VV_ptr_A9 < BLOCK_END([VV_ptr_A9]));(0 < VV_ptr_A9);(BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([x_main__SSA__phi_3]));(BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([x_main__SSA__blk_0_1]));(BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([tmp_main]));((VV_ptr_A9 != 0) => (VV_ptr_A9 = BLOCK_BEGIN([VV_ptr_A9])));(0 <= VV_ptr_A9);(VV_ptr_A9 = 0);(VV_ptr_A9 = BLOCK_BEGIN([VV_ptr_A9]));(BLOCK_BEGIN([VV_ptr_A9]) <= VV_ptr_A9);(UNCHECKED([VV_ptr_A9]) = 1);(BLOCK_END([VV_ptr_A9]) >= (BLOCK_BEGIN([VV_ptr_A9]) + tmp___0_main__SSA__blk_0_1));(BLOCK_END([VV_ptr_A9]) >= (BLOCK_BEGIN([VV_ptr_A9]) + tmp___0_main))] 

//solution: k_8 := [((VV_ptr_A9 != 0) => && [(0 < VV_ptr_A9) ; (BLOCK_BEGIN([VV_ptr_A9]) <= VV_ptr_A9) ; (VV_ptr_A9 < BLOCK_END([VV_ptr_A9]))]);(BLOCK_END([VV_ptr_A9]) = BLOCK_END([x_main__SSA__phi_3]));(BLOCK_END([VV_ptr_A9]) = BLOCK_END([x_main__SSA__blk_0_1]));(BLOCK_END([VV_ptr_A9]) = BLOCK_END([tmp_main]));((VV_ptr_A9 != 0) => ((BLOCK_END([VV_ptr_A9]) - VV_ptr_A9) >= 4));((VV_ptr_A9 + (4 * tmp___0_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A9]));((VV_ptr_A9 + (4 * tmp___0_main)) <= BLOCK_END([VV_ptr_A9]));(VV_ptr_A9 < BLOCK_END([VV_ptr_A9]));(0 < VV_ptr_A9);(BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([x_main__SSA__phi_3]));(BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([x_main__SSA__blk_0_1]));(BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([tmp_main]));((VV_ptr_A9 != 0) => (VV_ptr_A9 = BLOCK_BEGIN([VV_ptr_A9])));(0 <= VV_ptr_A9);(VV_ptr_A9 = 0);(VV_ptr_A9 = BLOCK_BEGIN([VV_ptr_A9]));(BLOCK_BEGIN([VV_ptr_A9]) <= VV_ptr_A9);(UNCHECKED([VV_ptr_A9]) = 1);(BLOCK_END([VV_ptr_A9]) >= (BLOCK_BEGIN([VV_ptr_A9]) + tmp___0_main__SSA__blk_0_1));(BLOCK_END([VV_ptr_A9]) >= (BLOCK_BEGIN([VV_ptr_A9]) + tmp___0_main))] 

//solution: k_7 := [(0 <= VV_int);(1 = 0);(0 < VV_int);(VV_int = 0)] 

solution: k_9 := [((BLOCK_END([VV_ptr_A9]) >= (BLOCK_BEGIN([VV_ptr_A9]) + tmp___0_main)), SIZE0[~A0:=tmp___0_main][VV_ptr_0:=VV_ptr_A9]);((BLOCK_END([VV_ptr_A9]) >= (BLOCK_BEGIN([VV_ptr_A9]) + tmp___0_main__SSA__blk_0_1)), SIZE0[~A0:=tmp___0_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A9]);((UNCHECKED([VV_ptr_A9]) = 1), UCH[VV_ptr_0:=VV_ptr_A9]);((BLOCK_BEGIN([VV_ptr_A9]) <= VV_ptr_A9), LB[VV_ptr_0:=VV_ptr_A9]);((VV_ptr_A9 = BLOCK_BEGIN([VV_ptr_A9])), ISBS[VV_ptr_0:=VV_ptr_A9]);((VV_ptr_A9 = 0), EQZ0[VV_ptr_0:=VV_ptr_A9]);((0 <= VV_ptr_A9), GTZP0[VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 != 0) => (VV_ptr_A9 = BLOCK_BEGIN([VV_ptr_A9]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A9]);((BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([tmp_main])), BEGIN[~A0:=tmp_main][VV_ptr_0:=VV_ptr_A9]);((BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([x_main__SSA__blk_0_1])), BEGIN[~A0:=x_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A9]);((BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([x_main__SSA__phi_3])), BEGIN[~A0:=x_main__SSA__phi_3][VV_ptr_0:=VV_ptr_A9]);((0 < VV_ptr_A9), GTZP[VV_ptr_0:=VV_ptr_A9]);((VV_ptr_A9 < BLOCK_END([VV_ptr_A9])), UB[VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 + (4 * tmp___0_main)) <= BLOCK_END([VV_ptr_A9])), SIZE[~A0:=tmp___0_main][VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 + (4 * tmp___0_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A9])), SIZE[~A0:=tmp___0_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 != 0) => ((BLOCK_END([VV_ptr_A9]) - VV_ptr_A9) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A9]);((BLOCK_END([VV_ptr_A9]) = BLOCK_END([tmp_main])), END[~A0:=tmp_main][VV_ptr_0:=VV_ptr_A9]);((BLOCK_END([VV_ptr_A9]) = BLOCK_END([x_main__SSA__blk_0_1])), END[~A0:=x_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A9]);((BLOCK_END([VV_ptr_A9]) = BLOCK_END([x_main__SSA__phi_3])), END[~A0:=x_main__SSA__phi_3][VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 != 0) => && [(0 < VV_ptr_A9) ; (BLOCK_BEGIN([VV_ptr_A9]) <= VV_ptr_A9) ; (VV_ptr_A9 < BLOCK_END([VV_ptr_A9]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A9])] 

solution: k_8 := [((BLOCK_END([VV_ptr_A9]) >= (BLOCK_BEGIN([VV_ptr_A9]) + tmp___0_main)), SIZE0[~A0:=tmp___0_main][VV_ptr_0:=VV_ptr_A9]);((BLOCK_END([VV_ptr_A9]) >= (BLOCK_BEGIN([VV_ptr_A9]) + tmp___0_main__SSA__blk_0_1)), SIZE0[~A0:=tmp___0_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A9]);((UNCHECKED([VV_ptr_A9]) = 1), UCH[VV_ptr_0:=VV_ptr_A9]);((BLOCK_BEGIN([VV_ptr_A9]) <= VV_ptr_A9), LB[VV_ptr_0:=VV_ptr_A9]);((VV_ptr_A9 = BLOCK_BEGIN([VV_ptr_A9])), ISBS[VV_ptr_0:=VV_ptr_A9]);((VV_ptr_A9 = 0), EQZ0[VV_ptr_0:=VV_ptr_A9]);((0 <= VV_ptr_A9), GTZP0[VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 != 0) => (VV_ptr_A9 = BLOCK_BEGIN([VV_ptr_A9]))), NULLorBEGIN[VV_ptr_0:=VV_ptr_A9]);((BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([tmp_main])), BEGIN[~A0:=tmp_main][VV_ptr_0:=VV_ptr_A9]);((BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([x_main__SSA__blk_0_1])), BEGIN[~A0:=x_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A9]);((BLOCK_BEGIN([VV_ptr_A9]) = BLOCK_BEGIN([x_main__SSA__phi_3])), BEGIN[~A0:=x_main__SSA__phi_3][VV_ptr_0:=VV_ptr_A9]);((0 < VV_ptr_A9), GTZP[VV_ptr_0:=VV_ptr_A9]);((VV_ptr_A9 < BLOCK_END([VV_ptr_A9])), UB[VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 + (4 * tmp___0_main)) <= BLOCK_END([VV_ptr_A9])), SIZE[~A0:=tmp___0_main][VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 + (4 * tmp___0_main__SSA__blk_0_1)) <= BLOCK_END([VV_ptr_A9])), SIZE[~A0:=tmp___0_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 != 0) => ((BLOCK_END([VV_ptr_A9]) - VV_ptr_A9) >= 4)), WORDSIZE[VV_ptr_0:=VV_ptr_A9]);((BLOCK_END([VV_ptr_A9]) = BLOCK_END([tmp_main])), END[~A0:=tmp_main][VV_ptr_0:=VV_ptr_A9]);((BLOCK_END([VV_ptr_A9]) = BLOCK_END([x_main__SSA__blk_0_1])), END[~A0:=x_main__SSA__blk_0_1][VV_ptr_0:=VV_ptr_A9]);((BLOCK_END([VV_ptr_A9]) = BLOCK_END([x_main__SSA__phi_3])), END[~A0:=x_main__SSA__phi_3][VV_ptr_0:=VV_ptr_A9]);(((VV_ptr_A9 != 0) => && [(0 < VV_ptr_A9) ; (BLOCK_BEGIN([VV_ptr_A9]) <= VV_ptr_A9) ; (VV_ptr_A9 < BLOCK_END([VV_ptr_A9]))]), NULLorVALID[VV_ptr_0:=VV_ptr_A9])] 

solution: k_7 := [((VV_int = 0), EQZ);((0 < VV_int), GTZ);((1 = 0), FALSE);((0 <= VV_int), GEZ)] 

//QUALIFIERS 

qualif WORDSIZE(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => ((BLOCK_END([VV_ptr_0]) - VV_ptr_0) >= 4))
      
qualif UCH(VV_ptr_0:ptr(0)):(UNCHECKED([VV_ptr_0]) = 1)
      
qualif UB(VV_ptr_0:ptr(0)):(VV_ptr_0 < BLOCK_END([VV_ptr_0]))
      
qualif SIZE0(VV_ptr_0:ptr(0)):(BLOCK_END([VV_ptr_0]) >= (BLOCK_BEGIN([VV_ptr_0]) + ~A0))
      
qualif SIZE(VV_ptr_0:ptr(0)):((VV_ptr_0 + (4 * ~A0)) <= BLOCK_END([VV_ptr_0]))
      
qualif NULLorVALID(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => && [(0 < VV_ptr_0) ; (BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0) ; (VV_ptr_0 < BLOCK_END([VV_ptr_0]))])
      
qualif NULLorBEGIN(VV_ptr_0:ptr(0)):((VV_ptr_0 != 0) => (VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0])))
      
qualif LB(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) <= VV_ptr_0)
      
qualif ISBS(VV_ptr_0:ptr(0)):(VV_ptr_0 = BLOCK_BEGIN([VV_ptr_0]))
      
qualif GTZP0(VV_ptr_0:ptr(0)):(0 <= VV_ptr_0)
      
qualif GTZP(VV_ptr_0:ptr(0)):(0 < VV_ptr_0)
      
qualif GTZ(VV_int:int):(0 < VV_int)
      
qualif GEZ(VV_int:int):(0 <= VV_int) 
qualif FALSE(VV_int:int):(1 = 0)
      
qualif EQZ0(VV_ptr_0:ptr(0)):(VV_ptr_0 = 0)
      
qualif EQZ(VV_int:int):(VV_int = 0)
      
qualif END(VV_ptr_0:ptr(0)):(BLOCK_END([VV_ptr_0]) = BLOCK_END([~A0]))
      
qualif BEGIN(VV_ptr_0:ptr(0)):(BLOCK_BEGIN([VV_ptr_0]) = BLOCK_BEGIN([~A0]))
      
 
